(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    266088,       5278]
NotebookOptionsPosition[    261093,       5137]
NotebookOutlinePosition[    261844,       5165]
CellTagsIndexPosition[    261757,       5160]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Solving the Radial Schr\[ODoubleDot]dinger equation using B-Polynomials via \
the Galerkin Method\
\>", "Title",
 CellChangeTimes->{
  3.5936212375078506`*^9, {3.593621353353654*^9, 3.593621357378461*^9}, {
   3.5936214152077627`*^9, 3.593621426392982*^9}, {3.5936251042816567`*^9, 
   3.593625111949275*^9}}],

Cell["Andrew Senchuk", "Author",
 CellChangeTimes->{{3.593621246509066*^9, 3.5936212507522736`*^9}}],

Cell["\<\
Department of Physics and Astronomy, The University of Manitoba\
\>", "Department",
 CellChangeTimes->{{3.5936212546366806`*^9, 3.5936212807979264`*^9}}],

Cell["November, 2013", "Date",
 CellChangeTimes->{{3.5936212860863357`*^9, 3.5936212902983427`*^9}}],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.5936214818822794`*^9, 3.593621485470286*^9}}],

Cell[TextData[{
 "This report will describe the progress made in generating wavefunctions for \
the Dirac equation in Hydrogen-like (H-like) ions where the nucleus is not a \
point.  As a preliminary step, the schrodinger equation for a H-like ion with \
a point nucleus was solved via the Galerkin method using the so-called B (or \
Bernstein) - polynomials as basis functions.  This report will not describe \
the Galerkin method itself; that introduction can be found in a ",
 StyleBox["separate report.",
  FontWeight->"Bold"],
 "  We begin the present discussion with a review of the \
Schr\[ODoubleDot]dinger equation for a single electron in a central potential \
V (r). First, we decompose the Schrodinger wave function in spherical \
coordinates and discuss the equation governing the radial wave function. \
Following this, we consider analytical solutions to the radial Schr\
\[ODoubleDot]dinger equation for the special case of a Coulomb potential. The \
analytical solutions provide a guide for our later numerical analysis. This \
is followed by a discussion of the numerical solution to the radial Schr\
\[ODoubleDot]dinger equation via the Galerkin method using a B-polynomial \
basis. Afterwards, some analysis is made on the accuracy of the numerical \
solutions compared with the analytical solutions.  Specifically we consider \
the residuals as a function of B-polynomial order, which gives us a \
quantitative measure of sufficient order inclusion."
}], "Text",
 CellChangeTimes->{{3.5936216048696537`*^9, 3.593621726166517*^9}, {
   3.5936219238458033`*^9, 3.5936219654751925`*^9}, {3.593621996600671*^9, 
   3.593622133156518*^9}, {3.5936224753370247`*^9, 3.5936224787595778`*^9}, {
   3.593622561689601*^9, 3.593622692201606*^9}, 3.59362274258613*^9, {
   3.593622929093994*^9, 3.5936229448529863`*^9}, {3.594138207409374*^9, 
   3.5941382495394335`*^9}, {3.594139893061913*^9, 3.594140006717409*^9}, {
   3.5941400405566783`*^9, 3.5941400764309797`*^9}, {3.5941401339143624`*^9, 
   3.594140204466696*^9}, {3.5941402725852423`*^9, 3.594140339375018*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Radial Schr\[ODoubleDot]dinger Equation", "Section",
 CellChangeTimes->{{3.5936228816782665`*^9, 3.5936229090424366`*^9}}],

Cell[TextData[{
 "The basic equation for our subsequent numerical studies is the radial Schr\
\[ODoubleDot]dinger equation with the separation constant \[Lambda] = \
\[ScriptL](\[ScriptL]",
 StyleBox["",
  FontSlant->"Italic"],
 " + 1):"
}], "Text",
 CellChangeTimes->{{3.5936230388044295`*^9, 3.593623071977439*^9}, {
  3.5936242824075317`*^9, 3.593624291430171*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[DifferentialD]", "2"], "P"}], 
     RowBox[{"\[DifferentialD]", 
      SuperscriptBox["r", "2"]}]], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"2", "m"}], 
      SuperscriptBox["\[HBar]", "2"]], 
     RowBox[{"(", 
      RowBox[{"E", " ", "-", 
       RowBox[{"V", "(", "r", ")"}], " ", "-", " ", 
       FractionBox[
        RowBox[{
         RowBox[{"\[ScriptL]", "(", 
          RowBox[{"\[ScriptL]", "+", "1"}], ")"}], 
         SuperscriptBox["\[HBar]", "2"]}], 
        RowBox[{"2", 
         SuperscriptBox["mr", "2"]}]]}], ")"}], "P"}]}], "=", "0"}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5939534668325663`*^9, 3.5939534681000857`*^9}},
 TextAlignment->Center],

Cell[TextData[{
 "and V(r) is the nuclear potential ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "nuc"], TraditionalForm]]],
 "(r):"
}], "Text",
 CellChangeTimes->{{3.5936233387577868`*^9, 3.5936234072575893`*^9}, 
   3.5936235275219364`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["V", "nuc"], "(", "r", ")"}], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["Ze", "2"], 
      RowBox[{"4", 
       SubscriptBox["\[Pi]\[Epsilon]", "0"]}]]}], 
    FractionBox["1", "r"]}]}], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, {
   3.5936235501335335`*^9, 3.5936236396436586`*^9}, {3.5939531931056147`*^9, 
   3.5939531953676186`*^9}, {3.593953476362713*^9, 3.593953477062723*^9}},
 TextAlignment->Center],

Cell[TextData[{
 "To facilitate calculations we will work in Atomic units, which allow us to \
be rid of unnecessary physical constants.  Atomic units are defined by \
requiring that the electron\[CloseCurlyQuote]s mass m, the electron\
\[CloseCurlyQuote]s charge ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", "e", "|", 
    RowBox[{"/", 
     SqrtBox[
      RowBox[{"4", 
       SubscriptBox["\[Pi]\[Epsilon]", "0"]}]]}]}], TraditionalForm]]],
 ", and Planck\[CloseCurlyQuote]s constant \[HBar], all have value 1.  The \
atomic unit of length is the Bohr radius ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "0"], "="}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"4", 
     SubscriptBox["\[Pi]\[Epsilon]", "0"], 
     RowBox[{
      SuperscriptBox["\[HBar]", "2"], "/", 
      SuperscriptBox["me", "2"]}]}], " ", "=", " ", "0."}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "529177.. ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    OverscriptBox[
     StyleBox["A",
      FontSlant->"Plain"], "\[EmptySmallCircle]"],
    FontSlant->"Plain"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and the atomic unit of energy is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"me", "^", "4"}], "/", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", 
       SubscriptBox["\[Pi]\[Epsilon]", "0"], "\[HBar]"}], ")"}], "2"], " "}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "= 27.2114 . . . eV.  In atomic units, the radial Schr\[ODoubleDot]dinger \
equation (1) becomes"
}], "Text",
 CellChangeTimes->{{3.593623691430704*^9, 3.5936239089290447`*^9}, {
  3.593623939380762*^9, 3.5936240809804373`*^9}, {3.5936241239438477`*^9, 
  3.5936242233203745`*^9}, {3.5936243599599733`*^9, 3.593624533647641*^9}, {
  3.5936246418505535`*^9, 3.5936247938453875`*^9}, {3.593624959087926*^9, 
  3.5936249617467165`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[DifferentialD]", "2"], 
      RowBox[{"P", "(", "r", ")"}]}], 
     RowBox[{"\[DifferentialD]", 
      SuperscriptBox["r", "2"]}]], "+", 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"E", " ", "-", 
       RowBox[{"V", "(", "r", ")"}], " ", "-", " ", 
       FractionBox[
        RowBox[{"\[ScriptL]", "(", 
         RowBox[{"\[ScriptL]", "+", "1"}], ")"}], 
        RowBox[{"2", 
         SuperscriptBox["r", "2"]}]]}], ")"}], 
     RowBox[{"P", "(", "r", ")"}]}]}], "=", "0"}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5936248186382685`*^9, 3.5936248341435065`*^9}, {
   3.5939534868841248`*^9, 3.593953488386647*^9}, {3.593967089880931*^9, 
   3.593967098878569*^9}},
 TextAlignment->Center],

Cell["\<\
We seek solutions to (3) that satisfy the normalization condition\
\>", "Text",
 CellChangeTimes->{{3.593624868714038*^9, 3.593624894001926*^9}, {
  3.5939535116420045`*^9, 3.5939535288847694`*^9}},
 TextAlignment->Left],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     RowBox[{
      SuperscriptBox["P", "2"], "(", "r", ")"}], 
     RowBox[{"\[DifferentialD]", "r"}]}]}], "=", "1"}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5936248186382685`*^9, 3.5936248341435065`*^9}, {
   3.5939534868841248`*^9, 3.593953488386647*^9}, {3.5939536651506124`*^9, 
   3.5939537139638624`*^9}},
 TextAlignment->Center],

Cell["\<\
The solution of this equation can be found in Johnson (2007).  We find the \
energy eigenvalue equation to be\
\>", "Text",
 CellChangeTimes->{{3.594138435729694*^9, 3.59413850411979*^9}, {
  3.594138592289913*^9, 3.5941385933799148`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["E", "n"], "=", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["Z", "2"], 
     RowBox[{"2", 
      SuperscriptBox["n", "2"]}]]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5936248186382685`*^9, 3.5936248341435065`*^9}, {
   3.5939534868841248`*^9, 3.593953488386647*^9}, {3.5939536651506124`*^9, 
   3.5939537139638624`*^9}, {3.5941385226998158`*^9, 3.5941385726198854`*^9}},
 TextAlignment->Center],

Cell[TextData[{
 "There are n distinct radial wave functions corresponding to ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["E", "n"], ".", "  ", "These"}], " ", "functions", " ", 
      "are", " ", 
      RowBox[{
       SubscriptBox["P", "n\[ScriptL]"], "(", "r", ")"}], "with", " ", 
      "\[ScriptL]"}], " ", "=", " ", "0"}], ",", " ", "1", ",", "...", ",", 
    " ", 
    RowBox[{"n", "-", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and are given in terms of a confluent hypergeometric series:"
}], "Text",
 CellChangeTimes->{{3.594138635239973*^9, 3.594138740290121*^9}, {
   3.5941387740301685`*^9, 3.59413880367021*^9}, 3.5941392372933607`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["P", "n\[ScriptL]"], "(", "r", ")"}], "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"n", "(", 
       RowBox[{
        RowBox[{"2", "\[ScriptL]"}], "+", "1"}], ")"}], "!"}]], 
    SqrtBox[
     FractionBox[
      RowBox[{"Z", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "+", "\[ScriptL]"}], ")"}], "!"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "\[ScriptL]", "-", "1"}], ")"}], "!"}]]], 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"2", "Z", " ", "r"}], "n"], ")"}], 
     RowBox[{"\[ScriptL]", "+", "1"}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "Z"}], " ", 
      RowBox[{"r", "/", "n"}]}]], " ", 
    RowBox[{"F", "(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "n"}], "+", "\[ScriptL]", "+", "1"}], ",", 
      RowBox[{
       RowBox[{"2", "\[ScriptL]"}], "+", "2"}], ",", 
      RowBox[{"2", "Z", " ", 
       RowBox[{"r", "/", "n"}]}]}], ")"}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5936248186382685`*^9, 3.5936248341435065`*^9}, {
   3.5939534868841248`*^9, 3.593953488386647*^9}, {3.5939536651506124`*^9, 
   3.5939537139638624`*^9}, {3.5941385226998158`*^9, 3.5941385726198854`*^9}, 
   3.594138838610259*^9, {3.5941389054603953`*^9, 3.594139164540758*^9}},
 TextAlignment->Center],

Cell["\<\
The lowest few states are found to be:\
\>", "Text",
 CellChangeTimes->{{3.59413921528333*^9, 3.5941392440133705`*^9}}],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["P", "10"], "=", 
    RowBox[{"2", " ", 
     SuperscriptBox["Z", 
      RowBox[{"3", "/", "2"}]], " ", "x", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "Z"}], " ", "x"}]]}]}], ";"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"\t", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "20"], "=", 
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], " ", 
      SuperscriptBox["Z", 
       RowBox[{"3", "/", "2"}]], " ", "x", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "Z"}], " ", 
        RowBox[{"x", "/", "2"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         FractionBox["1", "2"], "Z", " ", "x"}]}], ")"}]}]}], ";"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["P", "21"], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", 
       SqrtBox["6"]}]], " ", 
     SuperscriptBox["Z", 
      RowBox[{"5", "/", "2"}]], " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "Z"}], " ", 
       RowBox[{"x", "/", "2"}]}]]}]}], ";"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["P", "30"], "=", 
    RowBox[{
     FractionBox["2", 
      RowBox[{"3", " ", 
       SqrtBox["3"]}]], " ", 
     SuperscriptBox["Z", 
      RowBox[{"3", "/", "2"}]], " ", "x", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "Z"}], " ", 
       RowBox[{"x", "/", "3"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox["2", "3"], "Z", " ", "x"}], "+", 
       RowBox[{
        FractionBox["2", "27"], 
        SuperscriptBox["Z", "2"], 
        SuperscriptBox["x", "2"]}]}], ")"}]}]}], ";"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["P", "31"], "=", 
    RowBox[{
     FractionBox["8", 
      RowBox[{"27", " ", 
       SqrtBox["6"]}]], " ", 
     SuperscriptBox["Z", 
      RowBox[{"5", "/", "2"}]], " ", 
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "Z"}], " ", 
       RowBox[{"x", "/", "3"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox["1", "6"], "Z", " ", "x"}]}], ")"}]}]}], ";"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["P", "32"], "=", 
    RowBox[{
     FractionBox["4", 
      RowBox[{"81", 
       SqrtBox["30"]}]], " ", 
     SuperscriptBox["Z", 
      RowBox[{"7", "/", "2"}]], " ", 
     SuperscriptBox["x", "3"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "Z"}], " ", 
       RowBox[{"x", "/", "3"}]}]]}]}], ";"}], 
  TraditionalForm]}], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5936248186382685`*^9, 3.5936248341435065`*^9}, {
   3.5939534868841248`*^9, 3.593953488386647*^9}, {3.5939536651506124`*^9, 
   3.5939537139638624`*^9}, {3.5941385226998158`*^9, 3.5941385726198854`*^9}, 
   3.594138838610259*^9, {3.5941389054603953`*^9, 3.594139164540758*^9}, {
   3.5941392668634024`*^9, 3.5941392953734426`*^9}, {3.5941394295811396`*^9, 
   3.594139531161282*^9}, {3.594139872521598*^9, 3.5941398770779176`*^9}, {
   3.5941409189851713`*^9, 3.5941409692252417`*^9}},
 TextAlignment->Center,
 TextJustification->1],

Cell["\<\
Graphically, these are are shown in the figure below:
\
\>", "Text",
 CellChangeTimes->{{3.5941396332641726`*^9, 3.5941396781611123`*^9}, {
  3.594139710185354*^9, 3.5941397220167856`*^9}},
 TextAlignment->Left],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
y2JfauXHkzZ3pFXBvi7T6baRkb1ielceHTL7j/l40pH2e9mU1ZIAwIxEwSUJ
wenNmzfPnz+PzWcymipNa3cjTwZpN98edNcK9rWFue0rOKJXTO/k4v6yYVr3
GzjizTEfAPBgiILLFgJVzISxThj+vFANrZfZbmJbqfKq1ridzW01aq8q6QHD
d7Ji/2kjQzLkt3rlaZwdfv7XJIS9EPnSup/sBwAPmCi4MrGlXpxdXWBTbXpI
3FjFv6/1d5nui4KdDHmU/D8fY4+XX//Vv/xv/sF/3H38Hzz7l4eHsdOLOV8A
2Aai4FrE/bb9E68hGcYMNkU4vGwkB8XRMbD/4Lm4wK9xehxf/x8U/7t//F/+
Z8M+6D8sHrxtbsLxwwDAComCa5duxwhpMM7Mhm9KnJyN87NJT9yfG52fJv/3
8f9V/of/aV+c+8//4T/7F//t//jP/kXnA+N1Ys58+c+e/RedP/9H/9vv/1/j
/23W/6iW93oftVuq/P66LgYCwDYSBTfT169fY+RL+sSsOCCWE1Onp6fxA+/M
8E7RYhoA2EKi4FYQBQGAYUTBrSAKAgDDiIJbQRQEAIYRBbeCKAgADCMKbgVR
EAAYRhTcCqIgAKxCu9V4l1TLt+1/b84Ge9dozdqz7UczeTG6hXD0Imlm8K4u
CgIAZOHyvLo//ESwQunobKYWvq16pTj0SqJg3rnhK+aGr5gbDmyriSfDPq3U
v019tS+18mNR8EFyw1fMDV8xNxzYTu2LpFcQLBTLv9W7J8BeNetJpbTbzW7F
o/qUM8Xt8+peuFxhr3q+7OPA/N5eMTd8xdzwFXPDga2UFvEKxcpZa+DJ1odq
Nw3u7icfp4p2P+qVR+H1j8u1L0sY7R1+b6+YG75ibviKueHANrqslWNJsHBQ
u7yf9dqt+lF35d9etTFNFuzu9/yp2vgz+9He5ff2irnhK+aGr5gbDmyf9mXt
oJsEy7XL4S+JE77TLvDrFgWHB8uM5fT3dk6HfZ3bked02Ne5HXlOh32d55ED
zOvPRvWnTsx7VEo+jXhNuiO4WKkPTiDf08uWNyXEy0atWi729qPctKZ5XWsM
z5vzyenv7ZwO+zq3I8/psK9zO/KcDvs6zyMHmNc0MS/tEzgmLqa62bJQ+ssv
5b1he4cLxXIye6/C4XL6ezunw77O7chzOuzr3I48p8O+zvPIAeb1KSk9mjT5
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
Wo1a2jPwdg+IGw6wmdJJzDEzMn4/Z2L8bfSNWKb2Re0griVMtyS44dkashzi
bl9BNxxgM03z+/l21U+6AJzZLR4FfSPm0W6eHnW3phaKB297PU/c8Gzdj4L9
7WKu3XCATeX388qIgivXary9bXC3Wzo67TvKwg3P1ohNUoX96vnl3Re44QAb
xazNypggXqF2s/5r3xG3xYOkMbBp1Q1fmnDzX/9STg8i6S4XdMMBNpO13Ctj
28hqtFuN5DaH3DkIo58bvmS3Tb9jhx83HGAz6fCwMprJrED/AX975V/PhoXA
yA1ftttGgp3ZXjccYDPp+7oy46Ogb8TCbrcJD+xdHf5qN3wBvdne4eeGdN1d
+OeGA2wqp0GtyKTJL9+IhaT1wP5twuM/wg2fW9qve8zxLmn263WZdsMBNpQz
4ldj4joo34j59c4gnjoH3nDD55bO9u4U9pOLYXen3Xx70F0rmB4B44YDbKj2
RdJbX9XfCuyqWU8q3V/O/acGMJ/JS+J9I+bVSyZj5yvvc8Pnl5b4OltzXtUa
t9Gu1ai9um3i058V3XCATZUeGDrK00r927oHmXfT7I70jZjL7RqzafSvQ3PD
5zbx1nUU/752Z9GmGw6wsfq3Xt5VKB2N2YjJtKZslOEbMbu+CtUUBrYkuOFz
u2wkB8XRN3rE5h03HGBjtVuNd0m1rzHvzcTPu4bJmmxM3zPNN2JGzaQ0fRIc
sjvVDZ/fTT/p5Pfb6d0be+Xqq9dDuzn2PsgNBwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4KH4Vq883dn5qdr4
c90jmUYc7dNK/du6RwIAkHftVv2ouLNTKNcu1z2UaV3WyoWdneJRvdVe91AA
APKsdVYpFvJTEoz+bFR/Cum1WDlrrXsoAAC5FSdbc1USjGJh0DQxAMC82hfJ
fl4DVS/E7icXZokBAGbWTVM7e9VGDtNUu1Hd28lpjgUAWJ4fzeTFTUraeZE0
f1xfXzZq1fLNgsCdR5X6j/RV3TnWwl71fGQSbDVqye+V0u7Ord1S5ffX9eYs
4fFTUnq0M/jp+zST0s6454drn1f3Crmc3QYAWKK+KHjxsXawl8a4vqwVd17s
jN4wctWs/X1xZ5RC8eDt1HFwOVEw/RIKPycXVzN8HADAQ5ZGwWKpdCfN3Wat
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
NHAAAAAAAAAAAAAAAAAAAAAgD/w/z+B4Ug==
    "], {{0, 761}, {857, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{857, 761},
  PlotRange->{{0, 857}, {0, 761}}]], "Input",
 CellChangeTimes->{{3.594140242803535*^9, 3.594140247418606*^9}},
 TextAlignment->Center]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
B (Bernstein) - Polynomial Basis Sets for approximate solutions\
\>", "Section",
 CellChangeTimes->{{3.5939540787144647`*^9, 3.5939541110724616`*^9}, {
  3.5939579485170193`*^9, 3.5939579610209618`*^9}}],

Cell[TextData[{
 "The main goal is to present a solution of the Schr\[ODoubleDot]diger \
equation on a closed interval [a, b] with continuous polynomials which \
require no particular knot (or grid) sequence.  To that end, we introduce the \
so-called Bernstein, or B-polynomials of degree n, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", 
    RowBox[{"n", ",", "i"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "(r), which are defined as:"
}], "Text",
 CellChangeTimes->{{3.5939541947987475`*^9, 3.5939542729249477`*^9}, {
   3.5939577914671073`*^9, 3.593957791844613*^9}, {3.593957831625224*^9, 
   3.593957882914762*^9}, {3.5939579783249774`*^9, 3.593957982976299*^9}, 
   3.5939580676138487`*^9, {3.5939581999046307`*^9, 3.593958202205916*^9}, {
   3.593958237796463*^9, 3.5939583647596626`*^9}, {3.5939598594173727`*^9, 
   3.5939599231871023`*^9}, {3.5939602878639536`*^9, 3.593960322194481*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BPolynomial", "[", 
    RowBox[{"n_", ",", "i_", ",", "a_", ",", "b_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{"n", ",", "i"}], "]"}], 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "a"}], ")"}], "i"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"b", "-", "x"}], ")"}], 
       RowBox[{"n", "-", "i"}]]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"b", "-", "a"}], ")"}], "n"]]}]}], " ", ";"}]], "Input",
 CellChangeTimes->{{3.586518613253986*^9, 3.586518663361274*^9}, {
   3.586518710535757*^9, 3.5865187812974806`*^9}, {3.5865207496514645`*^9, 
   3.58652075269347*^9}, {3.5865208340788136`*^9, 3.586520838493621*^9}, 
   3.593960107328681*^9}],

Cell["\<\
for i = 0, 1, ..., n and Binomial[n,i] is the binomial coefficient, given by:\
\>", "Text",
 CellChangeTimes->{{3.593959958625147*^9, 3.593960033366295*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Binomial"}]], "Input",
 CellChangeTimes->{{3.5939600536003556`*^9, 3.593960066733057*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Binomial\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\) gives the binomial coefficient \
\!\(\*RowBox[{\\\"(\\\", GridBox[{{StyleBox[\\\"n\\\", \\\"TI\\\"]}, \
{StyleBox[\\\"m\\\", \\\"TI\\\"]}}], \\\")\\\"}]\).\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Binomial"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.5941352122758913`*^9},
 CellTags->"Info3594113611-7772521"]
}, Open  ]],

Cell[TextData[{
 "Thus, there are only (n+1) nth-degree polynomials.  For convenience, we set \
",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", 
    RowBox[{"n", ",", "i"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "(r) = 0, if i < 0 or i > 0.  We can view all the non-vanishing \
B-polynomials of degree n supported over the interval.  The first and last \
polynomials are generally related to the boundary conditions of the problem \
currently under consideration.  As an example, a set of 6 B-polynomials of \
degree 5 over the interval [-1,1] is shown here:"
}], "Text",
 CellChangeTimes->{{3.5939602059189453`*^9, 3.5939602612260447`*^9}, {
  3.593960335278432*^9, 3.593960362745104*^9}, {3.5939603983631506`*^9, 
  3.5939603990706615`*^9}, {3.593960456840299*^9, 3.5939606492582545`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"BPolynomial", "[", 
       RowBox[{"5", ",", "k", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.58651885483601*^9, 3.5865189049744983`*^9}, {
  3.5865208427368283`*^9, 3.5865208461688347`*^9}, {3.5865215035383887`*^9, 
  3.586521504848791*^9}, {3.5865230000844345`*^9, 3.586523002034437*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
hCkg
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
t9xIL9L9P1NbC9A=
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1: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
iv8D+xDkjA==
     "]]}, 
   {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}, 
   {Hue[0.8503398874989481, 0.6, 0.6], LineBox[CompressedData["
1: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
WH/LYe4ngf//n4V3JSl9/5/8PwM7F2U=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-1, 1}, {0., 0.9999998979591879}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.593960652410803*^9, 3.594052052404992*^9, 
  3.5941352126258917`*^9}]
}, Open  ]],

Cell["", "Text"],

Cell["\<\
It is clear, that all the B-polynomials are positive and the sum of all the \
polynomials is equal to 1 at any point x.\
\>", "Text",
 CellChangeTimes->{{3.593960666767274*^9, 3.5939607289657288`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Solving the Radial Schr\[ODoubleDot]dinger equation using B-polynomials\
\>", "Section",
 CellChangeTimes->{{3.5939580791827765`*^9, 3.5939581163570976`*^9}, {
  3.5939682439199066`*^9, 3.5939682484599767`*^9}}],

Cell[TextData[{
 "Our ultimate goal is to evaluate MBPT expressions for the correlation \
energy.  As an aid we introduce a discrete basis set and, thereby, reduce the \
infinite sums and integrals over the real spectrum to finite sums over a \
pseudospectrum.  Since correlation corrections in atoms have finite range, we \
restrict our attention to a finite (but large) cavity of radius R. To study \
the ground-state or low-lying excited states of ions, the radius of this \
cavity is chosen to be R \[TildeTilde] 40/Zion a.u., where Zion is the ionic \
charge. For large cavities, the results of correlation calculations are \
independent of the cavity radius. As boundary conditions, we require that the \
radial wave functions vanish at the origin and at the cavity boundary.  The \
spectrum in the cavity is discrete but infinite.\n\nWe obtain our solution \
using a variational principle; we note that the radial \
Schr\[ODoubleDot]dinger wave function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["P", "\[ScriptL]"], "(", "r", ")"}], " ", "satisfies", 
      " ", "the", " ", "varational", " ", "equation", " ", "\[Delta]S"}], "=",
      "0"}], ",", " ", "where"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.5939581649165936`*^9, 3.5939581930320253`*^9}, {
  3.5939669227133636`*^9, 3.5939669761816845`*^9}, {3.593967110720001*^9, 
  3.5939671929612646`*^9}, {3.593967253539695*^9, 3.593967279615095*^9}, {
  3.593967309943061*^9, 3.593967313214361*^9}, {3.593967343909833*^9, 
  3.593967360720091*^9}, {3.593967399803191*^9, 3.5939675836560154`*^9}, {
  3.593967656495884*^9, 3.593967669947341*^9}, {3.5939682659527454`*^9, 
  3.593968266201499*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[IndentingNewLine]", 
   RowBox[{"S", "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "R"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            SubscriptBox["dP", "\[ScriptL]"], "(", "r", ")"}], "dr"], ")"}], 
         "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"V", "(", "r", ")"}], "+", 
          FractionBox[
           RowBox[{"\[ScriptL]", "(", 
            RowBox[{"\[ScriptL]", "+", "1"}], ")"}], 
           RowBox[{"2", 
            SuperscriptBox["r", "2"]}]]}], ")"}], 
        SuperscriptBox[
         RowBox[{
          SubscriptBox["P", "\[ScriptL]"], "(", "r", ")"}], "2"], 
        RowBox[{"\[DifferentialD]", "r"}]}], "-", 
       RowBox[{"\[Epsilon]", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "R"], 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SubscriptBox["P", "\[ScriptL]"], "(", "r", ")"}], "2"], 
          RowBox[{
          "\[DifferentialD]", "r", "\[IndentingNewLine]"}]}]}]}]}]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5936248186382685`*^9, 3.5936248341435065`*^9}, {
   3.5939534868841248`*^9, 3.593953488386647*^9}, {3.5939536651506124`*^9, 
   3.5939537139638624`*^9}, {3.5939676854875793`*^9, 3.593967895233301*^9}, {
   3.5939679784520793`*^9, 3.5939679832771535`*^9}},
 TextAlignment->Center],

Cell["\<\
The parameter \[Epsilon], which is a Lagrange multiplier, was introduced to \
insure that the normalization constraint \
\>", "Text",
 CellChangeTimes->{{3.593967943442792*^9, 3.5939680485731564`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "R"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["P", "2"], "(", "r", ")"}], 
       RowBox[{"\[DifferentialD]", "r"}]}]}], "=", "1"}], 
    "\[IndentingNewLine]"}]}], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5936248186382685`*^9, 3.5936248341435065`*^9}, {
   3.5939534868841248`*^9, 3.593953488386647*^9}, {3.5939536651506124`*^9, 
   3.5939537139638624`*^9}, {3.593968055460762*^9, 3.5939680731435337`*^9}},
 TextAlignment->Center],

Cell[TextData[{
 "is satisfied.  The variational principle \[Delta]S = 0 together with the \
costraintes \[Delta]P(0) = 0 and \[Delta]P(R) = 0 leads to the radial Scr\
\[ODoubleDot]dinger equation for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["P", "\[ScriptL]"], "(", "r", ")"}], "."}], 
   TraditionalForm]]],
 "  To obtain our approximate solution by expanding ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["P", "\[ScriptL]"], "in", " ", "terms", " ", "of", " ", "a",
      " ", "set", " ", "of", " ", "functions"}], " ", ",", " ", 
    RowBox[{"in", " ", "our", " ", "case"}], ",", " ", 
    RowBox[{
     RowBox[{"the", " ", "B"}], "-", "polynomials"}]}], TraditionalForm]]],
 " of order n:"
}], "Text",
 CellChangeTimes->{{3.593968077749854*^9, 3.5939681892715673`*^9}, {
  3.593968759500326*^9, 3.593968841205331*^9}, {3.593968902508773*^9, 
  3.593968923624097*^9}, {3.594139774046335*^9, 3.5941397793601665`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"P", "(", "r", ")"}], "=", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox["p", "i"], " ", 
       RowBox[{
        SubscriptBox["B", 
         RowBox[{"n", ",", "i"}]], "(", "r", ")"}]}]}]}], 
    "\[IndentingNewLine]"}]}], TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5936248186382685`*^9, 3.5936248341435065`*^9}, {
   3.5939534868841248`*^9, 3.593953488386647*^9}, {3.5939536651506124`*^9, 
   3.5939537139638624`*^9}, {3.593968055460762*^9, 3.5939680731435337`*^9}, {
   3.5939689610009212`*^9, 3.5939690275131927`*^9}},
 TextAlignment->Center],

Cell["\<\
and substituting into the integral S gives\
\>", "Text",
 CellChangeTimes->{{3.5939690614199634`*^9, 3.593969100555565*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[IndentingNewLine]", 
   RowBox[{"S", "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "R"], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           FractionBox["d", "dr"], 
           RowBox[{
            UnderoverscriptBox["\[Sum]", 
             RowBox[{"i", "=", "1"}], "n"], 
            RowBox[{
             SubscriptBox["p", "i"], " ", 
             RowBox[{
              SubscriptBox["B", 
               RowBox[{"n", ",", "i"}]], "(", "r", ")"}]}]}]}], ")"}], "2"]}],
        "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"V", "(", "r", ")"}], "+", 
            FractionBox[
             RowBox[{"\[ScriptL]", "(", 
              RowBox[{"\[ScriptL]", "+", "1"}], ")"}], 
             RowBox[{"2", 
              SuperscriptBox["r", "2"]}]]}], ")"}], "[", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"i", "=", "1"}], "n"], 
           RowBox[{
            SubscriptBox["p", "i"], " ", 
            RowBox[{
             SubscriptBox["B", 
              RowBox[{"n", ",", "i"}]], "(", "r", ")"}]}]}], "]"}], "2"], 
        RowBox[{"\[DifferentialD]", "r"}]}], "-", 
       RowBox[{"\[Epsilon]", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "R"], 
         RowBox[{
          SuperscriptBox[
           RowBox[{"[", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"i", "=", "1"}], "n"], 
             RowBox[{
              SubscriptBox["p", "i"], " ", 
              RowBox[{
               SubscriptBox["B", 
                RowBox[{"n", ",", "i"}]], "(", "r", ")"}]}]}], "]"}], "2"], 
          RowBox[{
          "\[DifferentialD]", "r", "\[IndentingNewLine]"}]}]}]}]}]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5936248186382685`*^9, 3.5936248341435065`*^9}, {
   3.5939534868841248`*^9, 3.593953488386647*^9}, {3.5939536651506124`*^9, 
   3.5939537139638624`*^9}, {3.5939676854875793`*^9, 3.593967895233301*^9}, {
   3.5939679784520793`*^9, 3.5939679832771535`*^9}, {3.593969130336022*^9, 
   3.593969211262265*^9}},
 TextAlignment->Center],

Cell["\<\
The varational principle where \[Delta]S = 0 is a minimum is given by the \
condition:\
\>", "Text",
 CellChangeTimes->{{3.59396926042177*^9, 3.5939693127950745`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[PartialD]", "S"}], 
      RowBox[{"\[PartialD]", 
       SubscriptBox["p", "j"]}]], "=", "0"}], ",", "         ", 
    RowBox[{"j", " ", "=", "1"}], ",", "...", ",", "n"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5936248186382685`*^9, 3.5936248341435065`*^9}, {
   3.5939534868841248`*^9, 3.593953488386647*^9}, {3.5939536651506124`*^9, 
   3.5939537139638624`*^9}, {3.593968055460762*^9, 3.5939680731435337`*^9}, {
   3.5939689610009212`*^9, 3.5939690275131927`*^9}, {3.593969342374279*^9, 
   3.5939693879212284`*^9}},
 TextAlignment->Center],

Cell["\<\
Carrying out the above derivative leads to\
\>", "Text",
 CellChangeTimes->{{3.5939695605476303`*^9, 3.593969587130538*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S", "=", 
     RowBox[{
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox["p", "i"], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubsuperscriptBox["\[Integral]", "0", "R"], 
           RowBox[{
            FractionBox[
             RowBox[{"d", 
              RowBox[{
               SubscriptBox["B", 
                RowBox[{"n", ",", "i"}]], "(", "r", ")"}]}], "dr"], 
            FractionBox[
             RowBox[{"d", 
              RowBox[{
               SubscriptBox["B", 
                RowBox[{"n", ",", "j"}]], "(", "r", ")"}]}], "dr"]}]}], "+", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"V", "(", "r", ")"}], "+", 
             FractionBox[
              RowBox[{"\[ScriptL]", "(", 
               RowBox[{"\[ScriptL]", "+", "1"}], ")"}], 
              RowBox[{"2", 
               SuperscriptBox["r", "2"]}]]}], ")"}], 
           RowBox[{
            SubscriptBox["B", 
             RowBox[{"n", ",", "i"}]], "(", "r", ")"}], 
           RowBox[{
            SubscriptBox["B", 
             RowBox[{"n", ",", "j"}]], "(", "r", ")"}], 
           RowBox[{"\[DifferentialD]", "r"}]}], "-", 
          RowBox[{"2", "\[Epsilon]", 
           RowBox[{
            SubsuperscriptBox["\[Integral]", "0", "R"], 
            RowBox[{
             RowBox[{
              SubscriptBox["B", 
               RowBox[{"n", ",", "i"}]], "(", "r", ")"}], 
             RowBox[{
              SubscriptBox["B", 
               RowBox[{"n", ",", "j"}]], "(", "r", ")"}], 
             RowBox[{"\[DifferentialD]", "r"}]}]}]}]}], "}"}]}]}], "=", 
      "0"}]}], "\[IndentingNewLine]"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5936248186382685`*^9, 3.5936248341435065`*^9}, {
   3.5939534868841248`*^9, 3.593953488386647*^9}, {3.5939536651506124`*^9, 
   3.5939537139638624`*^9}, {3.5939676854875793`*^9, 3.593967895233301*^9}, {
   3.5939679784520793`*^9, 3.5939679832771535`*^9}, {3.593969130336022*^9, 
   3.593969211262265*^9}, {3.5939696169122458`*^9, 3.5939697570668983`*^9}},
 TextAlignment->Center],

Cell[TextData[{
 "Letting ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["v", "\[RightVector]"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["p", "1"], ",", 
     SubscriptBox["p", "2"], ",", " ", "...", ",", " ", 
     SubscriptBox["p", "n"]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and defining the matricies,"
}], "Text",
 CellChangeTimes->{{3.59396999415679*^9, 3.59396999607932*^9}, {
  3.593970030403597*^9, 3.593970124016285*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["A", "ij"], "=", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "R"], 
       RowBox[{
        FractionBox[
         RowBox[{"d", 
          RowBox[{
           SubscriptBox["B", 
            RowBox[{"n", ",", "i"}]], "(", "r", ")"}]}], "dr"], 
        FractionBox[
         RowBox[{"d", 
          RowBox[{
           SubscriptBox["B", 
            RowBox[{"n", ",", "j"}]], "(", "r", ")"}]}], "dr"]}]}], "+", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"V", "(", "r", ")"}], "+", 
         FractionBox[
          RowBox[{"\[ScriptL]", "(", 
           RowBox[{"\[ScriptL]", "+", "1"}], ")"}], 
          RowBox[{"2", 
           SuperscriptBox["r", "2"]}]]}], ")"}], 
       RowBox[{
        SubscriptBox["B", 
         RowBox[{"n", ",", "i"}]], "(", "r", ")"}], 
       RowBox[{
        SubscriptBox["B", 
         RowBox[{"n", ",", "j"}]], "(", "r", ")"}], 
       RowBox[{"\[DifferentialD]", "r"}]}]}]}], "\[IndentingNewLine]"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5936248186382685`*^9, 3.5936248341435065`*^9}, {
   3.5939534868841248`*^9, 3.593953488386647*^9}, {3.5939536651506124`*^9, 
   3.5939537139638624`*^9}, {3.5939676854875793`*^9, 3.593967895233301*^9}, {
   3.5939679784520793`*^9, 3.5939679832771535`*^9}, {3.593969130336022*^9, 
   3.593969211262265*^9}, {3.5939696169122458`*^9, 3.5939697570668983`*^9}, {
   3.5939701458053694`*^9, 3.593970180858408*^9}, 3.5939702342942286`*^9, {
   3.5939703431171503`*^9, 3.5939703766939154`*^9}, {3.5941351400457907`*^9, 
   3.5941351429157944`*^9}},
 TextAlignment->Center],

Cell[BoxData[
 FormBox[
  RowBox[{"\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["B", "ij"], "=", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "R"], 
      RowBox[{
       RowBox[{
        SubscriptBox["B", 
         RowBox[{"n", ",", "i"}]], "(", "r", ")"}], 
       RowBox[{
        SubscriptBox["B", 
         RowBox[{"n", ",", "j"}]], "(", "r", ")"}], 
       RowBox[{"\[DifferentialD]", "r"}]}]}]}], "\[IndentingNewLine]"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5936248186382685`*^9, 3.5936248341435065`*^9}, {
   3.5939534868841248`*^9, 3.593953488386647*^9}, {3.5939536651506124`*^9, 
   3.5939537139638624`*^9}, {3.5939676854875793`*^9, 3.593967895233301*^9}, {
   3.5939679784520793`*^9, 3.5939679832771535`*^9}, {3.593969130336022*^9, 
   3.593969211262265*^9}, {3.5939696169122458`*^9, 3.5939697570668983`*^9}, {
   3.5939701458053694`*^9, 3.593970180858408*^9}, {3.5939702342942286`*^9, 
   3.5939702449418917`*^9}, {3.5939703028315315`*^9, 3.593970356224851*^9}, {
   3.5941351501858044`*^9, 3.5941351513658066`*^9}},
 TextAlignment->Center],

Cell["\<\
we obtain the generalized eigenvalue problem\
\>", "Text",
 CellChangeTimes->{{3.5939702036700077`*^9, 3.5939702199502583`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["\[IndentingNewLine]",
    FontWeight->"Bold"], 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox["A",
       FontWeight->"Bold"], "\[CenterDot]", 
      OverscriptBox["v", "\[RightVector]"]}], "=", 
     RowBox[{"\[Epsilon]", " ", 
      RowBox[{
       StyleBox["B",
        FontWeight->"Bold"], "\[CenterDot]", 
       OverscriptBox["v", "\[RightVector]"]}]}]}], "\[IndentingNewLine]"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5936248186382685`*^9, 3.5936248341435065`*^9}, {
   3.5939534868841248`*^9, 3.593953488386647*^9}, {3.5939536651506124`*^9, 
   3.5939537139638624`*^9}, {3.5939676854875793`*^9, 3.593967895233301*^9}, {
   3.5939679784520793`*^9, 3.5939679832771535`*^9}, {3.593969130336022*^9, 
   3.593969211262265*^9}, {3.5939696169122458`*^9, 3.5939697570668983`*^9}, {
   3.5939701458053694`*^9, 3.593970180858408*^9}, {3.5939702342942286`*^9, 
   3.5939702449418917`*^9}, {3.5939703028315315`*^9, 3.593970356224851*^9}, {
   3.5939704041030865`*^9, 3.5939704605064535`*^9}, {3.5939705064234085`*^9, 
   3.5939705109922285`*^9}},
 TextAlignment->Center],

Cell[TextData[{
 "Standard routines can now be used to obtain the eigenvalues and \
eigenvectors that solve the original problem.  In our case, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " routines will be used.  Solving the generalized eigenvalue equation, one \
obtains n real eigenvalues ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Epsilon]", "\[Lambda]"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and n eigenvectors ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["v", "\[Lambda]"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". The eigenvectors satisfy the orthogonality relations,"
}], "Text",
 CellChangeTimes->{{3.593970525448701*^9, 3.593970611137517*^9}, {
  3.593970669899669*^9, 3.5939707264255376`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "n"], 
       RowBox[{
        SubsuperscriptBox["v", "i", "\[Lambda]"], 
        SubscriptBox["B", "ij"], 
        SubsuperscriptBox["v", "j", "\[Mu]"]}]}]}], " ", "=", " ", 
     SubscriptBox["\[Delta]", "\[Lambda]\[Mu]"]}], "\[IndentingNewLine]"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{
  3.593623121566951*^9, {3.5936231549574633`*^9, 3.5936232916695633`*^9}, 
   3.5936242699573407`*^9, {3.5936248186382685`*^9, 3.5936248341435065`*^9}, {
   3.5939534868841248`*^9, 3.593953488386647*^9}, {3.5939536651506124`*^9, 
   3.5939537139638624`*^9}, {3.593968055460762*^9, 3.5939680731435337`*^9}, {
   3.5939689610009212`*^9, 3.5939690275131927`*^9}, {3.593971394490799*^9, 
   3.5939715015724435`*^9}},
 TextAlignment->Center],

Cell[TextData[{
 "A ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code was written to implement the above scheme:"
}], "Text",
 CellChangeTimes->{{3.5939715604045973`*^9, 3.593971590907566*^9}, 
   3.594051838199664*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"galerkinSE", "[", 
   RowBox[{"n_", ",", "a_", ",", "b_", ",", "Z_", ",", "l_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "u", ",", "const", ",", "eigensystem", ",", "eigenvalues", ",", 
      "eigenvaluelist", ",", "fullset", ",", "header", ",", "list", ",", 
      "matA", ",", "matB", ",", "norm", ",", "\[Rho]vec", ",", "eq", ",", 
      "quantumnumbers", ",", "eqns", ",", "vars", ",", "BPolynomial", ",", 
      "A", ",", "B", ",", "\[Rho]", ",", "coeffs", ",", "norms", ",", "P", 
      ",", "psi", ",", "solve", ",", "sortedeigensystem", ",", 
      "SortEigensystem", ",", "zeros"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "define", " ", "the", " ", "function", " ", "u", " ", "used", " ", "to",
        " ", "match", " ", "inhomogeneous", " ", "boundary", " ", 
       "conditions"}], ",", " ", 
      RowBox[{"if", " ", "any"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"u", "[", "x_", "]"}], "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"define", " ", "the", " ", "basis", " ", 
       RowBox[{"functions", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"BPolynomial", "[", 
       RowBox[{"s_", ",", "i_", ",", "a", ",", "b", ",", "x_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"Binomial", "[", 
        RowBox[{"s", ",", "i"}], "]"}], 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "a"}], ")"}], "i"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"b", "-", "x"}], ")"}], 
          RowBox[{"s", "-", "i"}]]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"b", "-", "a"}], ")"}], "s"]]}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"define", " ", "a", " ", "sorting", " ", "function"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SortEigensystem", "[", "eigsys_", "]"}], ":=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"Sort", "[", 
        RowBox[{"Transpose", "[", "eigsys", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "determine", " ", "the", " ", "projection", " ", "of", " ", "the", " ", 
       "operator", " ", "onto", " ", "the", " ", "basis", " ", 
       RowBox[{"functions", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"A", "[", 
       RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"BPolynomial", "[", 
             RowBox[{
              RowBox[{"n", "+", "1"}], ",", "i", ",", "a", ",", "b", ",", 
              "x"}], "]"}], ",", "x"}], "]"}], " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"BPolynomial", "[", 
             RowBox[{
              RowBox[{"n", "+", "1"}], ",", "j", ",", "a", ",", "b", ",", 
              "x"}], "]"}], ",", "x"}], "]"}]}], "+", 
         RowBox[{"2", 
          RowBox[{"BPolynomial", "[", 
           RowBox[{
            RowBox[{"n", "+", "1"}], ",", "i", ",", "a", ",", "b", ",", "x"}],
            "]"}], 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"-", "Z"}], "x"], "+", 
            FractionBox[
             RowBox[{"l", " ", 
              RowBox[{"(", 
               RowBox[{"l", "+", "1"}], ")"}]}], 
             RowBox[{"2", " ", 
              SuperscriptBox["x", "2"]}]]}], ")"}], 
          RowBox[{"BPolynomial", "[", 
           RowBox[{
            RowBox[{"n", "+", "1"}], ",", "j", ",", "a", ",", "b", ",", "x"}],
            "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", "\"\<GlobalAdaptive\>\""}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "200"}]}], "\[NoBreak]", "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"BPolynomial", "[", 
          RowBox[{
           RowBox[{"n", "+", "1"}], ",", "i", ",", "a", ",", "b", ",", "x"}], 
          "]"}], " ", 
         RowBox[{"BPolynomial", "[", 
          RowBox[{
           RowBox[{"n", "+", "1"}], ",", "j", ",", "a", ",", "b", ",", "x"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
        RowBox[{"Method", "\[Rule]", "\"\<GlobalAdaptive\>\""}], ",", 
        RowBox[{"MaxRecursion", "\[Rule]", "200"}]}], "\[NoBreak]", "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "generate", " ", "the", " ", "matricies", " ", "based", " ", "on", " ", 
       "the", " ", "above", " ", "definitions"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"matA", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"A", "[", 
         RowBox[{"i", ",", "j"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"matB", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"B", "[", 
         RowBox[{"i", ",", "j"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "calculate", " ", "the", " ", "generalized", " ", "eigenvalues", " ", 
       "and", " ", "eigenvectors", " ", "from", " ", "the", " ", "above", " ",
        "matricies"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"eigensystem", "=", 
      RowBox[{"Eigensystem", "[", 
       RowBox[{"{", 
        RowBox[{"matA", ",", "matB"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sortedeigensystem", "=", 
      RowBox[{"SortEigensystem", "[", "eigensystem", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "calculate", " ", "the", " ", "coefficients", " ", "that", " ", "allow",
        " ", "the", " ", "eigenvectors", " ", "to", " ", "be", " ", 
       "normalized"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"norms", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"const", "[", "k", "]"}], ")"}], "2"], " ", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"sortedeigensystem", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "k", ",", "i"}], "]"}], "]"}], "  ", 
               RowBox[{"B", "[", 
                RowBox[{"i", ",", "j"}], "]"}], " ", 
               RowBox[{"sortedeigensystem", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "k", ",", "j"}], "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
           "\[Equal]", "1"}], ",", 
          RowBox[{"const", "[", "k", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "generate", " ", "the", " ", "set", " ", "of", " ", "equations", " ", 
       "formed", " ", "from", " ", "the", " ", "basis", " ", "functions", " ",
        "and", " ", "solutions", " ", "to", " ", "the", " ", "generalized", 
       " ", "eigenvalue", " ", "problem"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "n"}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", 
          RowBox[{"n", ",", "i"}], "]"}], "=", 
         RowBox[{
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"j", "=", "1"}], "n"], 
           RowBox[{
            RowBox[{"const", "[", "i", "]"}], " ", 
            RowBox[{"sortedeigensystem", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "i", ",", "j"}], "]"}], "]"}], " ", 
            RowBox[{"BPolynomial", "[", 
             RowBox[{
              RowBox[{"n", "+", "1"}], ",", "j", ",", "a", ",", "b", ",", 
              "x"}], "]"}]}]}], "/.", 
          RowBox[{"norms", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "test", " ", "the", " ", "equations", " ", "for", " ", "the", " ", 
       "correct", " ", "phase"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "n"}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"y", "[", 
               RowBox[{"n", ",", "i"}], "]"}], ",", "x"}], "]"}], "/.", 
            RowBox[{"x", "\[Rule]", "0"}]}], ")"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "[", 
            RowBox[{"n", ",", "i"}], "]"}], "=", 
           RowBox[{
            RowBox[{"(", "1", ")"}], " ", 
            RowBox[{"y", "[", 
             RowBox[{"n", ",", "i"}], "]"}]}]}], ";"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "[", 
            RowBox[{"n", ",", "i"}], "]"}], "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], " ", 
            RowBox[{"y", "[", 
             RowBox[{"n", ",", "i"}], "]"}]}]}], ";"}]}], "]"}]}], 
      RowBox[{"(*", " ", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<y\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "i"}], "}"}], ",", "\"\< = \>\"", ",", 
         RowBox[{"y", "[", 
          RowBox[{"n", ",", "i"}], "]"}]}], "]"}], " ", "*)"}], "]"}], ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"eigenvaluelist", "=", 
      RowBox[{
       RowBox[{"sortedeigensystem", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "/", "2"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"header", "=", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Principal Quantum Number n\>\"", ",", "\"\<Energies (a.u.)\>\""}],
        "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"quantumnumbers", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"list", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"quantumnumbers", ",", "eigenvaluelist"}], "}"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "header", "}"}], ",", "list"}], "]"}], ",", 
       RowBox[{"Frame", "\[Rule]", "All"}], ",", 
       RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", "Thin"}], ",", 
       RowBox[{"ItemStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Menu\>\"", ",", "16"}], "}"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5940522963453336`*^9, 3.5940523640054283`*^9}, {
   3.594052599025758*^9, 3.5940526004357595`*^9}, 3.5940527496059685`*^9, {
   3.5940528704461374`*^9, 3.5940528960561733`*^9}, {3.594052955186256*^9, 
   3.5940529717362795`*^9}, {3.594053026586356*^9, 3.594053038656373*^9}, {
   3.5940531322665043`*^9, 3.5940532225866303`*^9}, {3.5940532781867085`*^9, 
   3.5940532788467093`*^9}, {3.5940533205867677`*^9, 3.594053322966771*^9}, {
   3.594053362946827*^9, 3.594053367346833*^9}, {3.5940534045468855`*^9, 
   3.5940535196670465`*^9}, {3.59405357209712*^9, 3.594053575607125*^9}, {
   3.594053619927187*^9, 3.5940536254571943`*^9}, {3.594053839935294*^9, 
   3.594053885355357*^9}, {3.594053921445408*^9, 3.594053948155445*^9}, {
   3.5940539997405176`*^9, 3.594054000810519*^9}, {3.5940540747406225`*^9, 
   3.5940541383607116`*^9}, {3.594054584443836*^9, 3.5940546206838865`*^9}, {
   3.594054669643955*^9, 3.5940547033640027`*^9}, {3.5940547539340734`*^9, 
   3.5940548044541445`*^9}, {3.5940548512642097`*^9, 
   3.5940550246244526`*^9}, {3.594055062254505*^9, 3.5940550835245347`*^9}, {
   3.594055517442874*^9, 3.594055519782278*^9}, {3.5940563078258743`*^9, 
   3.5940563103218784`*^9}, {3.5940564255124807`*^9, 
   3.5940564489125214`*^9}, {3.59405650497902*^9, 3.5940565332462697`*^9}, {
   3.5940566545988827`*^9, 3.5940566732565155`*^9}, 3.594056996598284*^9, {
   3.5940573644937296`*^9, 3.594057452228284*^9}, {3.594057500931569*^9, 
   3.5940575854681177`*^9}, {3.5940576207241797`*^9, 3.594057625170188*^9}, {
   3.5940576940287085`*^9, 3.594057733574778*^9}, {3.594057809734112*^9, 
   3.594057850434583*^9}, {3.594057993003234*^9, 3.5940580691937675`*^9}, {
   3.5940581114542418`*^9, 3.5940583002769737`*^9}, {3.5940583338950324`*^9, 
   3.594058388307928*^9}, {3.594137547841713*^9, 3.594137560711731*^9}, {
   3.594382609379445*^9, 3.59438261972946*^9}, {3.5943834188105803`*^9, 
   3.5943834235005875`*^9}, {3.594383849938696*^9, 3.5943838574487066`*^9}, {
   3.5943839147187862`*^9, 3.59438395974885*^9}, {3.5943921092208405`*^9, 
   3.594392122870859*^9}, {3.5943922944410996`*^9, 3.5943922966211023`*^9}, {
   3.5943923507011786`*^9, 3.5943923538411827`*^9}, {3.594392392961238*^9, 
   3.5943923965312424`*^9}, {3.594392675446051*^9, 3.594392686912071*^9}, {
   3.5943927197969294`*^9, 3.594392721512932*^9}, {3.594393086945639*^9, 
   3.594393099645657*^9}, {3.5943932098658113`*^9, 3.594393247715864*^9}, {
   3.594393329015978*^9, 3.59439333061598*^9}, {3.594393371356037*^9, 
   3.59439338748606*^9}, {3.5943936060138683`*^9, 3.5943936432039204`*^9}, {
   3.5943937836441174`*^9, 3.5943937883741236`*^9}, {3.594393878004249*^9, 
   3.594393879954252*^9}, {3.5943939213243127`*^9, 3.5943939384143367`*^9}, {
   3.594394034769476*^9, 3.5943940419894857`*^9}, {3.5943963769474936`*^9, 
   3.594396382001902*^9}, {3.5943981199236884`*^9, 3.594398163354165*^9}, {
   3.5943982841295767`*^9, 3.59439830845002*^9}, {3.5944040011826186`*^9, 
   3.5944040025398207`*^9}, 3.5944041183076243`*^9, {3.594404181986936*^9, 
   3.594404184950941*^9}, {3.5944042199574027`*^9, 3.5944042237638097`*^9}}],

Cell["\<\
We can now evaluate the module. The parameter \[OpenCurlyDoubleQuote]order\
\[CloseCurlyDoubleQuote] is the maximum order of the B-polynomial expansion:\
\>", "Text",
 CellChangeTimes->{{3.5940520733350215`*^9, 3.594052088795043*^9}, {
  3.5941397992804728`*^9, 3.5941398475024633`*^9}, {3.5943883887216144`*^9, 
  3.594388417941655*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"order", "=", "10"}], ";", 
  RowBox[{"Z", "=", "83"}], ";", " ", 
  RowBox[{"R", "=", 
   RowBox[{"30", "/", "Z"}]}], ";", " ", 
  RowBox[{"l", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"galerkinSE", "[", 
   RowBox[{"order", ",", "0", ",", "R", ",", "Z", ",", "l"}], "]"}], "//", 
  "Timing"}]}], "Input",
 CellChangeTimes->{{3.5940521249650936`*^9, 3.594052140795116*^9}, 
   3.594052250335269*^9, {3.594054014930539*^9, 3.5940540432905784`*^9}, {
   3.594054192390787*^9, 3.594054192990788*^9}, {3.594055155464636*^9, 
   3.594055165204649*^9}, {3.5940551992396975`*^9, 3.5940551996296983`*^9}, 
   3.5940580407549176`*^9, {3.594058310260991*^9, 3.5940583105729914`*^9}, {
   3.5941352785159845`*^9, 3.594135281925989*^9}, 3.594135380416127*^9, {
   3.594135836816766*^9, 3.594135841666773*^9}, 3.5941358970768504`*^9, {
   3.5941360191870213`*^9, 3.5941360196670218`*^9}, 3.594136072467096*^9, {
   3.5941363908375416`*^9, 3.5941363911175423`*^9}, {3.594136476217661*^9, 
   3.594136476757662*^9}, {3.594136555447772*^9, 3.594136556887774*^9}, {
   3.594136798088112*^9, 3.594136821158144*^9}, {3.594136858398196*^9, 
   3.594136858978197*^9}, {3.5941406685008373`*^9, 3.594140668730837*^9}, {
   3.594140734210929*^9, 3.5941407347309294`*^9}, {3.594140773790984*^9, 
   3.5941408131310396`*^9}, 3.594382513609311*^9, {3.594382554349368*^9, 
   3.5943825785494018`*^9}, {3.5943847039598913`*^9, 3.594384704199892*^9}, {
   3.594384807190036*^9, 3.5943848074800367`*^9}, {3.594384872450127*^9, 
   3.594384872920128*^9}, {3.594384956170244*^9, 3.594384956660245*^9}, {
   3.5943882916114783`*^9, 3.594388292211479*^9}, 3.594389606305279*^9, {
   3.5943900820956955`*^9, 3.5943900823764963`*^9}, 3.5943901359001904`*^9, {
   3.5943912867039967`*^9, 3.594391288154799*^9}, {3.594392135350877*^9, 
   3.594392153130902*^9}, {3.5943923423711667`*^9, 3.5943923431011677`*^9}, {
   3.594392413291266*^9, 3.594392413931267*^9}, {3.594392501191389*^9, 
   3.5943925017613897`*^9}, {3.594392741231367*^9, 3.594392794801861*^9}, {
   3.594393119605685*^9, 3.5943931200556855`*^9}, {3.5943932699258957`*^9, 
   3.59439329480593*^9}, {3.5943935357737703`*^9, 3.5943935360237703`*^9}, {
   3.5943936283238993`*^9, 3.5943936287139*^9}, {3.594393794214132*^9, 
   3.5943937950441327`*^9}, {3.5943940004094276`*^9, 3.594394001309429*^9}, {
   3.5943940882795506`*^9, 3.5943940888295517`*^9}, {3.594394174359671*^9, 
   3.5943941746396713`*^9}, {3.5943945384476953`*^9, 3.594394548357709*^9}, {
   3.5943946072777915`*^9, 3.5943946075377917`*^9}, {3.5943946409582567`*^9, 
   3.594394703248344*^9}, {3.5943947496445284`*^9, 3.5943947532645335`*^9}, {
   3.5943947996845984`*^9, 3.594394799954599*^9}, {3.594394883714716*^9, 
   3.5943948842447166`*^9}, {3.5943950420826707`*^9, 3.594395042800272*^9}, {
   3.5943963870407114`*^9, 3.594396395277526*^9}, {3.594396429815986*^9, 
   3.594396430424387*^9}, 3.5943972224752755`*^9, {3.5943981500785418`*^9, 
   3.594398150328142*^9}, 3.5944040678103356`*^9, {3.594404238771036*^9, 
   3.594404239114237*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.28684029999999971494162309681996703148`6.81903234170526", ",", 
   TagBox[GridBox[{
      {"\<\"Principal Quantum Number n\"\>", "\<\"Energies (a.u.)\"\>"},
      {"1", 
       RowBox[{"-", "3398.683186373318`"}]},
      {"2", 
       RowBox[{"-", "860.257838702138`"}]},
      {"3", 
       RowBox[{"-", "381.74088869077536`"}]},
      {"4", 
       RowBox[{"-", "169.72099416657153`"}]},
      {"5", "91.7248439854677`"},
      {"6", "447.49852493628384`"},
      {"7", "906.6402804353467`"},
      {"8", "1645.5405242244003`"},
      {"9", "2593.496535756071`"},
      {"10", "8234.291074414883`"}
     },
     AutoDelete->False,
     FrameStyle->Thickness[Tiny],
     GridBoxAlignment->{"Columns" -> {{Center}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxItemStyle->{"Columns" -> {{"Menu"}}, "Rows" -> {{16}}}],
    "Grid"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.594053952285451*^9, {3.594054016560541*^9, 3.5940540446705804`*^9}, 
   3.594054080810631*^9, {3.5940541239106913`*^9, 3.5940541485207257`*^9}, 
   3.594054195790792*^9, 3.594054638003911*^9, 3.594054720144026*^9, {
   3.5940547633440866`*^9, 3.5940547861241183`*^9}, {3.5940548976442747`*^9, 
   3.5940549248443127`*^9}, 3.594054994924411*^9, 3.5940550298844595`*^9, 
   3.5940550939045496`*^9, {3.5940551572546377`*^9, 3.5940551673646526`*^9}, 
   3.5940552034897037`*^9, 3.594055532819602*^9, 3.594056631916443*^9, 
   3.5940574607458987`*^9, 3.5940575186064005`*^9, 3.594057594204133*^9, 
   3.594057632829801*^9, 3.5940580413477187`*^9, 3.5940580724073734`*^9, 
   3.594058115135848*^9, {3.5940581713427467`*^9, 3.5940582234468384`*^9}, 
   3.5940582544284925`*^9, {3.594058288795353*^9, 3.594058313708597*^9}, 
   3.594058345766653*^9, 3.5940583943295383`*^9, 3.5941352146758947`*^9, 
   3.594135283305991*^9, 3.594135381636129*^9, 3.594135844176776*^9, 
   3.5941358975068507`*^9, 3.5941360223770256`*^9, 3.5941360729670963`*^9, 
   3.594136395157548*^9, 3.594136483397671*^9, 3.5941365622477818`*^9, {
   3.5941367987281127`*^9, 3.594136821458144*^9}, 3.5941368612882004`*^9, {
   3.5941375534517207`*^9, 3.5941375684717417`*^9}, 3.594140690630868*^9, 
   3.5941407445109434`*^9, {3.5941407811909947`*^9, 3.5941408254210567`*^9}, 
   3.5943825155893135`*^9, {3.5943825577593727`*^9, 3.594382581639406*^9}, 
   3.5943826241894655`*^9, 3.594384727219924*^9, 3.5943848361800766`*^9, 
   3.594384900130166*^9, 3.5943849894002914`*^9, 3.5943895802652426`*^9, 
   3.594389623815303*^9, 3.594390127850576*^9, 3.594390229734355*^9, 
   3.5943904038915324`*^9, 3.5943913151740465`*^9, {3.5943921382708807`*^9, 
   3.5943921459808917`*^9}, 3.5943922822610826`*^9, {3.5943923406211643`*^9, 
   3.5943923587911897`*^9}, {3.594392408061259*^9, 3.594392425401283*^9}, 
   3.5943925129314055`*^9, {3.594392735568557*^9, 3.594392805144679*^9}, {
   3.594393115425679*^9, 3.5943931304456997`*^9}, {3.5943932628358855`*^9, 
   3.594393306915947*^9}, 3.5943933531860123`*^9, {3.5943935211537495`*^9, 
   3.5943935494837894`*^9}, 3.594393738084053*^9, 3.5943938503142104`*^9, 
   3.5943939184543085`*^9, 3.5943939951894207`*^9, 3.5943940266194644`*^9, 
   3.5943940693195243`*^9, 3.59439415231964*^9, 3.5943945315476856`*^9, {
   3.594394587737764*^9, 3.594394608477793*^9}, {3.594394642138259*^9, 
   3.594394710888355*^9}, 3.5943947783845687`*^9, 3.5943948647646894`*^9, 
   3.5943950157498245`*^9, 3.5943952814494915`*^9, {3.594396387586712*^9, 
   3.594396396977928*^9}, 3.594396491592095*^9, 3.5943972240976787`*^9, 
   3.5943981570205536`*^9, 3.594404069775939*^9, {3.594404233498227*^9, 
   3.594404249316654*^9}}]
}, Open  ]],

Cell["We can now graph the calculated eigenfunctions:", "Text",
 CellChangeTimes->{{3.5940569623874235`*^9, 3.594056980296255*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"y", "[", 
    RowBox[{"order", ",", "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "R"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<psi\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", ".25"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.2"}], ",", "7"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "0.2"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5940570050690985`*^9, 3.5940571985718384`*^9}, {
  3.5943825654893837`*^9, 3.594382566709385*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
1gYWaLMb/g8mZIAw
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"psi\"", TraditionalForm]},
  AxesOrigin->{0, -0.2},
  Method->{},
  PlotRange->{{0, 0.25}, {-0.2, 7}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.594057016675519*^9, {3.594057079574829*^9, 3.5940571378565316`*^9}, {
   3.594057181037408*^9, 3.5940572003814416`*^9}, 3.5941352148658953`*^9, 
   3.5941352879459977`*^9, 3.594135386586136*^9, 3.59413584697678*^9, 
   3.5941359038168592`*^9, 3.5941360252070293`*^9, 3.5941360753271*^9, 
   3.5941364164075775`*^9, 3.5941364905776815`*^9, 3.594136574087798*^9, {
   3.5941368014781165`*^9, 3.594136823998148*^9}, 3.5941368632882032`*^9, 
   3.5941406944508734`*^9, 3.5941407853610005`*^9, 3.5941408302310634`*^9, 
   3.5943825709493914`*^9, 3.5943847739599895`*^9, 3.5943848432900867`*^9, 
   3.594385010900321*^9, 3.5943902817780437`*^9, 3.59439041539905*^9, 
   3.5943913233172607`*^9, 3.5943935841238375`*^9, 3.594393743874061*^9, 
   3.5943938555542173`*^9, 3.5943940744995317`*^9, 3.5943941579796486`*^9}]
}, Open  ]],

Cell["\<\
We can now view make comparisons between the eigenfunctions generated with \
the analytical solutions.  We plot the residual of calculated eigenfunction \
and the analytic solution for the same state, in this case,n =1.  Other \
states can be check as well:\
\>", "Text",
 CellChangeTimes->{{3.594056348963146*^9, 3.5940564075412493`*^9}, {
  3.5940567795551023`*^9, 3.5940568769304733`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"psi", "[", 
    RowBox[{"1", ",", "0"}], "]"}], "=", 
   RowBox[{"2", " ", 
    SuperscriptBox["Z", 
     RowBox[{"3", "/", "2"}]], " ", "x", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "Z"}], " ", "x"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psi", "[", 
    RowBox[{"2", ",", "0"}], "]"}], "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox["2"]], " ", 
    SuperscriptBox["Z", 
     RowBox[{"3", "/", "2"}]], " ", "x", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "Z"}], " ", 
      RowBox[{"x", "/", "2"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox["1", "2"], "Z", " ", "x"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psi", "[", 
    RowBox[{"2", ",", "1"}], "]"}], "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", 
      SqrtBox["6"]}]], " ", 
    SuperscriptBox["Z", 
     RowBox[{"5", "/", "2"}]], " ", 
    SuperscriptBox["x", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "Z"}], " ", 
      RowBox[{"x", "/", "2"}]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psi", "[", 
    RowBox[{"3", ",", "0"}], "]"}], "=", 
   RowBox[{
    FractionBox["2", 
     RowBox[{"3", " ", 
      SqrtBox["3"]}]], " ", 
    SuperscriptBox["Z", 
     RowBox[{"3", "/", "2"}]], " ", "x", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "Z"}], " ", 
      RowBox[{"x", "/", "3"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox["2", "3"], "Z", " ", "x"}], "+", 
      RowBox[{
       FractionBox["2", "27"], 
       SuperscriptBox["Z", "2"], 
       SuperscriptBox["x", "2"]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psi", "[", 
    RowBox[{"3", ",", "1"}], "]"}], "=", 
   RowBox[{
    FractionBox["8", 
     RowBox[{"27", " ", 
      SqrtBox["6"]}]], " ", 
    SuperscriptBox["Z", 
     RowBox[{"5", "/", "2"}]], " ", 
    SuperscriptBox["x", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "Z"}], " ", 
      RowBox[{"x", "/", "3"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox["1", "6"], "Z", " ", "x"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"psi", "[", 
    RowBox[{"3", ",", "2"}], "]"}], "=", 
   RowBox[{
    FractionBox["4", 
     RowBox[{"81", 
      SqrtBox["30"]}]], " ", 
    SuperscriptBox["Z", 
     RowBox[{"7", "/", "2"}]], " ", 
    SuperscriptBox["x", "3"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "Z"}], " ", 
      RowBox[{"x", "/", "3"}]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", 
     RowBox[{"order", ",", "1"}], "]"}], "-", 
    RowBox[{"psi", "[", 
     RowBox[{"1", ",", "0"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "R"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<Residual\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", 
     RowBox[{"order", ",", "1"}], "]"}], "-", 
    RowBox[{"psi", "[", 
     RowBox[{"1", ",", "0"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.0000000001", ",", "R"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<Residual\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.594056436136099*^9, 3.594056455979334*^9}, {
  3.594056682023731*^9, 3.5940567042849703`*^9}, {3.594136652017907*^9, 
  3.5941366607379193`*^9}, {3.5941367000479746`*^9, 3.5941367152079954`*^9}, {
  3.5941367717480745`*^9, 3.5941367793380857`*^9}, {3.594136895578248*^9, 
  3.594136905228262*^9}, {3.594382587979415*^9, 3.5943825969394274`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{7.376444553725104*^-9, -8.38696722634791*^-6}, {
     0.00011086189899745545`, -0.12463375834546161`}, {
     0.00022171642155035718`, -0.24645599579631797`}, {
     0.00044342546665616066`, -0.4818546704607441}, {
     0.0008868435568677676, -0.9207858568301177}, {
     0.0009976980794206692, -1.0241068370585253`}, {
     0.001108552601973571, -1.1249389778488443`}, {
     0.0013302616470793746`, -1.3192847430808128`}, {
     0.0017736797372909815`, -1.6797125402142195`}, {
     0.0018845342598438834`, -1.7641364576609369`}, {
     0.0019953887823967852`, -1.8463557730447873`}, {
     0.0020559976508209574`, -1.889537107809747}}], LineBox[CompressedData["
1:eJwVl3k8lN8Xxy0TiVK0yFKESlkqKqLOZElZKlkSZU+U7Fu0WaJFhSLJvm/J
9rVzx85YZ5gZyzCDIaUUCll/z++veb1fz/Oce87nfM6deyVsXK7d5mBjYxPj
ZGP7/6+vjN8l/YlI6Pwto/FKdR0de33Zp+5xNPxmt3Q0q/2JLrxj3Iz5FA0X
1RVljnT9QDc/uqq7lEcDm+jwgYiRaRSaHrlVbA57PlIqfYr9Oxqpoab63v4A
BK4pJYPLk+jVjEWPgl4M9LwOML++ewRNXnGRSdgbC2yZuaIt9ilo1ZiN3+sU
xuvPC2c4gpHAzYg/uoYYa+ixeHPD4axDMfoXFgv4U6GiOx0L4f3TRWNjtk/A
5un6Qry+CdQLnwTyff0EPQtxnyVf0iBeIHzIryQeXLcJENw/fQXlUyGBDb3x
0Fh/7ZeDxRSQbzyU4ZuPh/BLEk448W/AlezgE388ATqWZhQOJ34HZ4XzgoT8
BLBT183nf/0T8HpzOpuyE0Enf1TJ690sDLpMzeq3JkJBqd33xW+z4PluJCb6
ayJMblP62AZzYHT/9rygYBLsVHTKvfFtDp6XGJxPN0iCpGsPxGSV/sCs+pHh
lq4kSGEG7U/LWoBao/RjTiNJoKRgPyP0ZwHC7MWDt88kwaQqrmn43CIcfLn7
6I2tybAlUMvQlLwIZiSOB991k8GpylJpz+wS1FsO7dzalgxqU4HWS1tX4K2b
iUNhfzLwZdJnX11egZtBpCrjqWTIf35B2PPNCixktNgkcKeAsMfeCg2+VTg6
U1ygcCEFjnRaWExvrML7h2F61xpSIIZ4WLqmZR2WLS7enialgPrZ3bKnltfB
+jzucTAzBfjY5fjFZTdAnuvhl9K1FOCKMRe4+GYD2t7eExBRTgX26gafZWk2
/HqKTv94XiqUBFx+FEllw9s945p9WJUKZt+c2Vyn2fDtd+p5dhNTQeO3YggP
Gzs+RvaM6sWvqRB/syTc7TA7XrFUJiFPIg1sr37xE/Vmxzu0bbbzik6DBE5q
8a5NHPiu3MaH29LTIOkJ92HSLg78yTdPozKL02DT6U+Zegc58ByGS80DPWnA
N/2BGnyBAx9P/ypzjjcdzh8wtmEP5sDjUKo6bW86WFHYExojOfB3ky3NXQ+n
w8aXRS6dZA68sj0tLEUrHUxEuL3jajjw5F/Nv7iepoPU1icOd+ax5+TAzUlv
0uHq08o8DTZOfGLJOQmV+HQIs4vRZ/Fx4p0elF67V5kO1EMcBA9pTjw3Z8Z/
3X/Sgfj8zpFeQ06884R1lwNnBgg4Pto1aMGJ72sR+8oukAGvfTeiMh058Slh
UUJKChnQYV/o9eExJ15t9zP/GMcMEFUTeUFO58TfDp33vPsgA1Re7WYf/MKJ
f7Nk7az2IgOiF6+UJFVw4pmD56yZWRnQO/5R9X4HJ55H77NZUXkGXBG73uJB
4cSfqBExCm7NAO3KzLUzI5z4oMSlC4enMmCT738DfL848Xnb7+CXFzOgr8n4
tNAill8ARaWDOxNe/NL9MrHOiT9oVyTreigTFvM4LFq34vDEw04C5faZIEAX
bCw9jMPPfxzkfemdCSVO/ezD8ji8KO+lTTdDMkHpLE25VQmHv/9TemkjPRNK
G/az/wIcPtri/Szpv0xwIoVdOqqFw9d2c0ynNmWCTqnPPzkdHH57EWNYeyIT
Bj8dWws1xOFVJC/T9v7NhKsJD7iZ13F4m/fVPdO4LLiaqDi5YY7Dv9p0lFiz
Mwv8583/fLXE4Uu8Pza8lcoCIWJvWIwtDj/8lbvGWikLSDSLLQJ3cHiuG96l
ippZsGVzSovRXRz+uqphNs02CzYm1e+ddsXhn+bVpWR7ZIHoXi2ufnccPkvs
WJx/UBZEbrqgo+GFw5PeJETpv8uCksWzEQ98cPjlDb63+1OzQFlqQ8n/AQ4v
6eb/fLYoC36HKr296I/D6419C2ioz4IzHVb/Rh/i8F6Gpv5R5CyoPj7cof0Y
h09obPa8M5YFbU/7bfye4PAtJ086q8xlQdaG8U6/pzj874zUO7wc2RDlLHtG
OwCHFxISsB7ekQ0qPJvkxjA+/+Kp2ReJbOB6Y6alG4jD312eMQw4ng1fdHyH
AjGOvHdL3/B8NuDkH2i/wLiK3n5B2iAb3BkXRi0wZumfwS9aZcOFoRg2HMZb
UZZKm2s2eL6fX/XF4p86tkfx01Ms/qdMuVosH8vkZ7L3w7PhT0vPt14s3+cC
f6QhKRue3jd+XonVUxhks39HQTaQwyYs3R/h8IN/eoTGUTbU8i83r2B6cNiD
wH/d2UDn7hO87ofDH6V95g1lZEP5rH9csC8Ob3RRdNONX9kwsUooDfbG4R9W
vFw/spENZqbK5dc9cfj0I/8WV7flgEiQ2sKaGw7f9enObNe+HEhK/tHk44LD
L/JRvyfJ58Bv6tGHTU44vPhjTZb7uRxwSEm6/9URh3e3kqDttsgBtDPSMBvz
x4dR3T8J93MgJyJ1u5kVDl9t473j0KMcOHLCnTl6E4fnvt2uezouBw53D8/7
GOPwspN/HVBuDvz5XtAXYoDDX7sjHqJdlQPlXnkczvo4fJyjF+H6YA4I9f98
1KyJw9d9TxxmfMuBUs1Ae2U8Dj95j7h8518OnHIbIgep4vDHnfef9BXKBf9f
xLtZx3H4Zve27BiTXAiT0f57TBSHn56fbxa3z4X3ARbmPrux+fDax8ryyoXU
d3EZH7fj8OY+Hvsq3ueCmYqLkAcO84u/2LsBci78K5F5E/CdEy/yzO2h8JU8
eGAuxKdfwInHc8V9TLHIgyclfy08szjx9qHNpUec86AxX+zwwyROfMELkdkz
r/MgdRyU5cM58RfeNN02b88DI4mTa5LOnHjXD3uvxGl/BnkVu8RIKU58lJCm
k9T1z7CW+XFmVJgTX/nR+UWe/WeYT5Jk272DE78prqGh+tln6DoU7iG3xoGP
TbqvPNzwGfofVnaK93HgG7PrJPbh8+Fo0qG/Bo848EErsrhPl/Oh8Ytmcpc7
B15dP2Zyz6182Nzlsuu0Awee8Ns5d4dfPuRLLuzruMaBrzotenJTST6UZkod
4TvEgS9q8r7449AXkGr5wsvfwY7v+R11epi7AAa2/DZ14mHH1/DpWuT+KgBn
OivCu3Qd1lcHIGSxAMZCDf9r/LAO5346SFhvFMBq3iOhNd91IHSGsHbzF0JK
c4iwvOo61L+pvxsoj7Fz7/VPtWvQvP2Mz437hYC7rHRjvm4VunbKhHNPF0L1
0ehZzpplYIhy19tOFgFTZLraJnoBFPHDnSVVJSDbuBHPn/cTdtmeNCCGlgJz
3fk8+x4GcPDG7fnwthQyul8epaeOwEwRx4jth1JIOON8ie34CLRy9NxdyyiF
yo9iZdJ6w+CXcjf4WHMpHLvfd/73syFgjiaWRePKIPYwx7F+7n7Isdqyzzag
DKK4fF/ZapMgerMbS+FFGYS7te4UGumBoAJazmp4GbzcU0gQ9+qBm2zpp6OT
yiCGnqNlebEb+JPAoA2VwdyT6oxovg7wZHgGK6yXwWrhXMS9/5rgnAXj+4pf
ObwPe35fXKgYfJ0nBTUCy2Gx1bz2SHkhFD7+qfbyRTlEmpy55nmjAKQSV94I
xZTDPxtk8RZyYQtzj+LJ/8qhrrDda8M7CSjWV/2df5UDIYlz2jUwEDndruMd
ta0Ah4S2445upSjDq1Xp8L0KkO2WO+qeVYYYz7pvubhXwNo70yeyI+XoWsbw
l7WnFTDf2k0q1qpCp7/+MxROqADTKysjARwExOF4Is6wvwJ6bvmwjqc0oo9O
qbLNepWwM/KjkbxNJ1Jq5GzONqqEz3jbhvr5TtQlYmf5+mYlnHcN4HsT3IVw
7VKRRk6VcAsaB1tTu5GzTMbi2KtKyLH8UWD/owepT2bVbxArQd7peVvgtl70
3TLfVOVSFbzPv+zIyU1DwWXb5kQNquCsSF/AcQ0a2s/v8ortRhXglyn1y49p
yKhWobbFoQpuOf6hWfyloVrRQkmT51Ww6cuaqPNwP4ocKJ5xb6kC2w9ROwpj
B5GqYUVwnlY1pL2riBUnDqO+okWFe/rVMPs5tvb70jByEjg1JGNcDfif7FeM
D42gBFLR8Uy7ahCMuMfJFzSC2K/mjSQHVYOp49Is+ykGatFLVP5QVw3eZv73
dmgxkVXe8LhxWzVYOQVRH99goiVe0bc7SdVQswQyNfeZ6Eh7zEQEsxpsOHzK
86KY6PWlyMiwjWro75r6ZjrORIYXnv0IOFsDB9ojQ2e9RtGP9IYPeK0a0M8e
L/UIHUXBmzg0NvRq4PVhjryWmFFU2vj448ObNeCtNi01UTmK9mr4XvDxrwH+
K3u5l1ZHEQPuJTlVYM8Tbla/8h1DvonZukfraqBVd6j1eOgY2r7xdeFbaw3s
aBVJyYkaQ+q1dvp3+msgWp3OvqtoDKWrWSxbL9ZA3klw6ZoaQ/dUDIyun6wF
x7ITwNIfR1fZj9mEq9WC8YBVyB/TcXSqbZtrm0YtuJ02CBixHUccNzpeqV6r
BdWnR3rhwTiK8dVu2O+CsfjBQpWUcfQYf5Bk6l0L7qVCVnvzxpHt5k2MiEe1
MHYaXej9bxzJx9Qvc4bVQqrt4jqldRw1lp09MZVVC7ojPCtCP8dRzhNRvERB
LXCIT1zo+DuO3mqv6JuV1ULPzSAjs/VxZEYrd+xoqoWfV0krXPws9HtBMblg
rBYyulRc0uRZSPTUke0PRBEoFKfRNuxZiGN9874iSQQW6sqVd+6z0Nemr0en
jyDQkZsMyvVgoSLjdO1bKgj4towJtTxhoYte4k/OmyAoMjlgdzWaheTPboT5
3UKgBdUfP35iIcFNI7HFdgh4YuUMUBILjbz/VCrtgaA2xPd9Ug4LeZXsnuEJ
R3C9VvFjdTULmT38u6L+AcERkac8PwgshNfs43mYgCCr686npUYW4uuLkJ7J
Q2DDMvPK7mChuU+uiodKEKTdPDep38NCNNsr562qEHjvuU/s7mWhlHm+W+Q2
BO1FMuA0yELPq6bv8pIQnFeX+hcyzEL3g4i+mv0IDpzQePCEyULKgs/fl04i
sNd8u3/LJAvtG7JP+fUTgWdhhUvcFAtxpmoVHP6L1UPhGOSbZqE7H9ntO9kJ
sF843+D5LxbakiwmXb6JAGs7zTRqZ1koP0uFlcJDgOqz9MqOeRYyKDBOfb2V
AJ9tI3qL/7LQnzI3G98dBMht/5nlschCMei1hO0uAuzhfGTC94+FVFuymfp7
CVBcMLr4aBnTr6spUVmMACp3KFmtKywUSB21kJQgQJz34Wc/VllIemRNbJs0
AfhRXda3NRZqndg7vHQYixeUoEBYZyGnnyfjxmUJMK1CPum6wUL8fw3Mu44R
INQmhPYP46LV+8IVSgSoMl4+dottApngXg6kKhMgam+QRSzG/3gzYt6oEeCc
0quHhRjHCdZff4AnQMmTyMwUjEFkZLedJgG+rsit3sd47MAy5fJFAnSmcH8Q
xDjkyO4oFT0C9KmNvH+HrSdz4oSR1FUC3FB8JjCD5dehclmQ34gA/nYsWUmM
Xc/fJf+7TgC+pUU2RawewUshESxzAgye6MkVw+otvZpytduSAOa6ETrjmD5m
prX8lbYEiDjrsRyE6bdmOdiVdocAokl1/RuYvkl3Fl6/vUeAs75DHNcXWEjT
RUDfz4UAsvyK0S/+YH73lue77UEA7Wb9gg9zLPTysU77FR8CRP5ocA74zUKk
14GXpJ8QAH874MoU1n/PqITN24MIMOtj8vn2NxYSiq9sWQ4hAE0q5SDC/GOR
N6fV84YAYpwB41yj2HyVbNtUFUmAnLITtn8x/6VXHWlMjyaAYcUHbwLmzx9E
G3X/BAJsSXpA+oH59y35Mbt9Cvb9iyTjy5i/TwzGEq5mYOt5dE2GYf5/8I18
7mA+ASoP6OckY/PBtVlDlVRDgEbUwy9XzELZ/JbLVXUEODNfbOyXz0J6e/wr
MpowfcWsE9KzWejdweLTDzsJoMB5uCQ6kYXEtSSVDg0TYKlS4sbkCxZq1IP5
HaOYX9OSRA8FY343Mi9aZRHADv+afuEx5m/bd8fIPwjQUxPdLemO+TWQU+7R
KgE2BxMXTExZCFfrIibNVgebFMY8uK+xUNe/oa2dnHVwMpa4OU6XhWzcSmZE
eetAJbdt1O0cNp9Wtwuq99bBmF7D4d4DLEQ916K4eqoO1JodpwMnx1GSn6JU
2pk6aBIUkwgYGUd3SxN36p2rg1M+zTtuU8fRmpzv309adSBtufB6pGkcSYnJ
lKka1UHQCYeB2NRx5L7y8oy/Wx1oHWkUuGo2jtROLx6R9KoDeHbDo/TqOOLy
sBVp960DO48LZ3Da4+jjd9VV4afY87VFexPFcUQY+FFT+aYOdHX6Ffq3jKOt
5ZfPL+fWgeWRSCXH/8ZQlqfAxQeTddC+3NP75N8oOmCU6+ryvQ5ujjlMrUyP
ojhFzY+3Z+ogdzZin+XIKIqY8/pusFAHqXyL/kP1o8jPdSDsCFc9/NxRQP7y
chTpOSWRhqTr4ZTft8qJXaPot628+bnb9dA/eD7okQgTqRjqOHOy6kHni1fv
KeoQKjpF3v/1az24rn3YF1s4hGSFzUjE6XoYYrKejoQNoX2jjkqR8/Xg8E46
mldjCOFcXiyLczZAhiL31fXPg6j7ZWvIuQMNoDdTY/D08QC6XX8h8YFVA7zi
/+nRwktDEcc1en7RG6DMyelzywQJBe69FHK4qRHYZeDWggBC0T99tH8RmiC3
XKzsNDEbNNqLb3LkNQNDXv22vW8blNcuHo/70gyLZW0FRrVtIF+kyn2quBkU
PMy6hXBEEP7YUOhY2QwtW98/knhLhDn7Xi5SazNsz33tIZfaDkkc8wWJE81A
4H53arG+E9ZUTmw6u78F/oQoiXf+6gF3Oe9B6oEWKBvY2TrOT4Ip8covrgdb
INOG33NUgQR93OpmaXIt8HWEZhvhQoI8isEXXrUWkFY39CP8JIGZm9uNQdMW
OIbnz1afIENZVsFnn8gWWFpwZO4m9MEISFRZRrfAqPRjfW1GH+BoEa3asS1g
3xd61WS9D65u8hjfk9ICvwkZMfxqFPhufXJveWELmI0ZV0//RwExkcrgpZ4W
KN7spKGQSoWg1w3mD/hbYWVml8tOW+z8LaXkaC3YChp9h8SGH/VDT1Wa96U9
rRAUcL3qaUw/iH5/FrF3fytMvcqxNO3sh9ILF1sq5FvhhUyzz4WTA/Bto+PE
sn4rjKj+2uBeH4Ar7lQe/7BW4K4cEPF3H4K4sx8uioe3QnrygvFqyBBMbTYN
bXrXCnV40QazT0MQmDiA2/6pFbKDjv/NbxiC0g76Rlp2K4g+uLdYJEAH0UPj
f7uaW8GEuMASyaGD41yqkiexFSoXf/1xqKZDaY2dx96uVmgQfawR2UWHK0aT
v20prXBAx8DuwRwdAgO+TS+Nt8LFmnqlGOVhmBr6NXqAvQ3EE5pf8tUOw8nM
AvFWXBsENFvg93QNQ6C7m+X9zW2Qqm9ye214GER45ull/G3Qva24y3xtGC6f
WqDp7WsDXrEgpuWZESgJX+30Vm0Dq7SwEP/PI8B+s4ZPFNrANHA7t3LVCFw+
9Fi3Tr0NcLrH9btbR+BrzUYrr04bsJuu4N6Mj4DwNEdjkmkbqP1oltbF7ldP
tXgqiV5t8HHQgFDtw4BHJQvHah+0wSuFtzo7gxngJ8nKLHzUBjW7fj2CcAZ4
saOomGdt0PH6c/X2LAbcrfF0s49qA/BM+RxPYYCDrM3UjY9tUMjN9S6CyYDb
n65Y6se3QYYPG9N0mgFWD47oK6W3AY/j17ZjbEwwPsk8zPFfG0xUMQzkdjLh
Wlpn4t/yNrillB/4R4gJVwWrdn+rboOXfzb00sWYoDMbhetpbANz44WUhoNM
wH/WZcb3tUFCqBnv/GkmnBVVuR7R3wZFTytqudSYcObVwa5gehs4y/QscuKZ
cNKRvfoeC4uvd3S+UpsJR6TLPqj8aQNU404XNmHCofdp2+SWsPozi1/63WCC
FGfkM/HVNnAQNC9suMmE/aNOHtzYHIeEi9sK2DJB9KrZ92VuIuT1iv/YY88E
YaRtPcNLBPRP9xuXIxN2xh+4QhEkAnc459lkZyYI8G1vbt1DhFoGPlLPjQn8
/mtq1SJEaO3YcmPUgwlbbvQfSZUkgoxYvUqLLxM2dr7hclPE9ok8knpwABNW
g/wf2Z0mQtI18j7/ICYszzn8ua5KBPuBpXvmz5jwp0dj7JwGEbR175v3P2fC
HBy/cUKbCLxm1HXPl0z4lb+vR1qXCCKvPu1aecWE72H/avgMiWAi9iqp4Q0T
O9dMKrFdJ0Isd8JurnAmsO725c6bEcFKfITzRAQTxgbqDny1IMLphieO2pFM
YFz88nHQhgifvvZcvPCOCfSyuO1d9kT4tU8lVf49EwYPvgytu0sEw3AVP7Yo
JtCifNZLnImw9sepuwrjPtxtryx3IihFhaZZRTOhx+e81wtvIpjtL436gXHn
dzGvu34YT1QM2nxgAvHWsqfuYyKMhvp4NWDc3EP1lA0kwsr16TvbYphQr1Hs
uTWECJ6GMiUaGKPSt54zL4jwUvzWTVuMq2WcPLtfE8GOl2hzH+PyuIueBRFE
uMve3maNcQm/tGdEFBGmXpPf4TEuDGT3dP+IvU+928CDcf7fYQ/DeCKoRp80
r8HWz3Go9FBKJsIJkR+3zDHOGIr22JVOBM7zll3jWP4plz08FrKIsHDf54sJ
xgl1VzxoeUTY9kYJV4LV/0lJ1qO8AIvPn9+9gukVk7nZ42MJEbKGBXb9X7/3
whPufuVEIN3Kpulg+oa/rnM3rybCvbvdwtcw/cPYEtzVCNj6l5dHNbD+PPfw
cxdrJIIWofSYONa/Z5Mm7ustmN6MrC1fsf4+7uB3J3Rj/X+r6KIUxgQ/+OGW
3EsEmzMv2Kswf/gUtboF0ogAdW/kZV8wwTUmwE2TgfnnmJRjF+YvJ14LN+lx
zG9lR59sYP5zfHzGjesr5scrZLxIIBNs7OZdW2eI8KNgul/gMRMsaN2u2XNE
uM8WXj7jzwRznTzXlwtEyLA5ZfLfAyYYHbvtqrdOhETd6REOLyZorVJdera2
w93swqLEu0xQdyl2KdzRDscvPN1GvsOEc2NvXSJ3tcPJ4/cNftkx4VTrRRcj
sXa4+t9EyncLJhx+X+ncL9sOVS+P7ZowwOaX+4NzxbF2WIhT0HG5zAQJPw/n
WKV2+GhwOIqlg82rlazzTbV22Bx4MCRcgwl8sgn3mbrtIHlD4cWMIjYvDQFO
U3fbgcc8Dde2HZvfe/nxIc7tIG54SdOMjwlKAkNdUu7tMFrCXjTAjelppXTc
+kE7lG6ctr6wxgCutcm/A6HtcF7HcaCeygDRU3pP2tPa4dV7U0OJIAbAsG+B
Y1Y75Ef/LeL3ZYBNcPood147/J3w1BpyYkAmeV1Ds7gdNEfNz24xYcAJl8LN
NXXt8OQEdU/bQQZcytodmT/SDgm+B+m0uhFwuqLRoDfWDt396wFJJSPwZsHl
z/eJdijzL7ymnTkCfZptJod+toONg1iZQtgIWI36iyStYOvbO9vdNxoBb+HR
tAihDnCYaXyUOzIMqWG5ZZ7XOqBBb3ti0SAdvGk4CWuTDojSq3oy3UIHnQMW
L/XNOmAL44PBRgkdfpdtv3XQpgN0F+eOl7+hw7lxL45+tw4Yk+vvdMPToV8F
r68a0QFJs3zqovFDsO1r3xh7Twds0JMld6kNwthxeb2Z3g64xOMjNSY1CP89
DP1vkNYB1fsu57/eOgg3Bc48L2Z0QOWppMGnIwOQfTZR7vavDrh5lLh16PEA
aL539G3d1gmqM+b7/Cv6we/8+ta3+p2Q8Zm723APDTwJmVnKBp0wBYuRbOtU
cAYDjTGjTkAHz9PesahgfTbN9+TNTggscTVxLqTCRRWd8aG7ndAgsdNp4RIV
dh+PLj/8vBPKPVYV73tToEhc3rYeO6e9+lma3lHTC983bpX/Pd0FW//Eydhs
7QGJ2scJtWLdcObgymyhwv/vlayWl7w9wIYrq4rVjEDKb97epT/pAcnYa3NK
c/XI9/Wxzr6AHthyiHJJV7kBlYeRFDqDekBA6Syb+uMGpPJK8G9NaA/UlKsM
d/E0ojPPPzxJfNsDbr5fUsz2N2H3k8T3Nok98OoSY5Cu0YLOeX+pnartgShr
AalUl3b02OuqxCihB+7SD5EWCtpRreds0EB9Dzx8ejJabK4dgYfiJWJzD9CM
SxrHPDoQ3rWsN7erB2TSrfF4r050/i6ach7pAb1WFZ8fzt1I06Jb4O9aD0i9
blf8FE9CMT5C2zo2eoCj5ITN/goSmg635kllJ0GRhYLNyz4SimyY37i6iQRv
JZZP7OQlI8ZhoZ95fCSIEaUmznmTkd+8VYudCAn4lRvEyi71ooLnc/59yti5
1UVM4MJgH8KlqPrkniFBiYOQkclcH7peFeweqEYC52emdy9uoaD1n7sdj+FJ
sMvq9AOSCgXpGqqahGmT4NpP1R/uHyhoUiz4mKYJCRZtt5NIelQkWrxrotiD
BIby6/3/EmjI5TI1LcAL+76CHPChiIbqv0XbXfEhgZq+aIlgMw05iAuxvvuR
4LKFo0LmDxoqeS08LhFIgk+hpxinlPuRrsP+0bfhWH5S+1zorf0ogZOZdCuS
BKerBs8aDvaj3wlJVkffk0B4te9VxnQ/iqZIMJs/kKByT+/Bsa0DaExdirGW
QIIB39Sp7KsDyE9MZvjeZxLoeB58aNU9gDrLv8WpfCGB3HmXtPCRASRulHOT
u5AE33YvWnz6OYCaXx6lp5SQQPlglyCedxAJLMkNDVSRwGkHj0aD5iDKJp8Y
0CaS4JTEC9MPBYNo9f58zK4OErBrZy3Z1AyiyzwlpuOdJDh009SCmziI/sDJ
/sckEuQSFnkHxwYR/vNp2n/9JBA0Gp9LFRhC/aFqFMmvJLAOQg+L7g4hTi/B
QqFvJKD/65Ia8hpC8jbfw7ZOY/quO+b3Ph1Cz9RiNBdnSEB7qzuhGD2ETszO
FxMXSBD3lGb/uXYI3RohvkVLJPBamUowaB1Cz9uT75Usk4B3+EB1I2kIjaRf
kUxYJ4HInpWje1hD6JVZbqQbFxmmUgQ/OHLRUal2oLP9ZjIsKZTnBWyjozGl
GzrmW8hgY3io4s5uOlLm5+bQ2kYG4cxAjXhpOrJdHR5W2U6Gh1sinv+QpaM3
30oq5AXI8I33yzUeJTpiNdi4Ce0mg9mtGa7c83TEX6iiv1WIDP8lbK9UuEhH
ZxK2y3AIk4GfUys44DIdRfjWMqfFyDCxK3julRkdnZMTvoqkySDnpWak4kpH
jsKzR0sOkWHR+BBd0ouO3nO3cmfLkEHxYHHO4AM6mh71QpFyZHjxWqI8L5CO
dnfrfQpVIAPt/khTSwgdqVdL+jw8TgYtr9my/Jd0FBNNkrc/SYZwWvQ3RgQd
NQRlbTE/TYZhGd5lmSg6mnF9MnlFBXtfOTYcYuhI2MKkXlOVDF9Wb0SLf6Ij
LV25BJWzZPDjSv3TEU9Hrso4P3kgg0Tn9ijNJDqKkx4yljxPhgJcoHVoCh21
CBQdF9Igw+FZIc2oNDqa23i+dasWGX5WqB5yzqAjsZ+W39i1yXCo9v3fHVl0
dHHwVNPCRTJ8mBKIfZpNR54tW5OndcjwnvP7RkUOHSWWsB4y9cgwsvWdQG0u
HRGTq0wpl8mw6U1HTVgeHS28iVQiXiXDzqnYn9Kf6UjioeN2dI0MroUX37zA
WM8R/6PYiAw+m+6ElWHsY7KnNcuEDGuDnX1fME7RmEmNNyVDtmmckTvGncea
nkSakcHoiMq/dSz+kliceehNLF/qtQJjjCV5PU4/tCCDoADzjjeWz+WlS4Ju
VmRoEhLfZo3l6zch/uu2DRkGN2IjdmH1pJMXiWZ2ZODbemD0XSbmlwFvkLcn
Q4ak0J/ldDo6MPq3mN2BDCKHsR0R08tqyvMwxRGrRyZaUBXTM+HXfFzWPTIE
VtRv2onpTV9w3/HwPnYvl/vyqAbrh8j67LMrLlh9/VXOp7F+xfD9dl5wJ8PT
YMrLOKy/VEGX8TZPMpzUrY8PjaSjXSIz1+O9yRCn//af+ls6ipT5gdf0I8My
22aLI8/pqOfYvf/2PCTDNo7bV02CMT8rf5eZfkSGFbNNltee0lHYhSmByABM
/9qVjEofrB/6d0JvB2H+NaO3H/SgIx7jyRXlZ2QIm9nFsnGmoxBbFovxnAw3
e9VadezoqPGu7Y3il1h/y6MCFizoiMN9rDMkjAwlqvt53G/Q0ZOnzFK5cEz/
bBWrfn06qg21PMoeidX3d9/+Bm06Wn0zktj3jgy3xEdePsLmzTee/tz/Axne
rajqWGPz6F7Zb9aWQAbfPbaJ43voqKDuendcEhmYFMNlne109KuVquGaQoZ8
f6n2gM105ETrk92Tgeljklh2a2kI3f7Ts273mQwfSflHuihDKG3liofyF2y9
ynfJBR1DaIyj+ytvIRmypqzv2DQMIYsdnT1FJZh+RiIkxYIhZCrflsJWTQaX
5ypNr0OHUPTJi3v6arB6T/Te+P5wCFHUWl5lIjJYaY4d3O0+hK7pNnlebiAD
+w0ZuyHzIaTnUHchjojNWyztsqjcEIKUiu+nB8iQVHSS5dM8iExWLvufGCLD
Fi8hz6SyQeRkxOKVGyZDtGlYw9usQRTLxS93YJQMKsI9X+pfYPvzXTsXvm9k
+Dp57YzfpUGUo8j/h7lEhr/rxRdP1g6gurC04KFlMsxl/DXryB1A/RMqu6ir
ZHigHhJ15OMA2hRjd6qdrReyJ/7mqnkMIKvVCt//NvdC7cqm8HKpAbSryW7t
hVAvXBtROyj8qB/J7lt+HSzcC36Gptdl7vQjdZ+3+56I9gJb+ZkgNoN+5CpT
CZ7ivWDGzs7PLdWPiK/5Ay0O98KdF6tT3i009NSkkktRuRf6DAIK5jhpaPor
/3b69V64NVPaumxIQRwNorc7b/SC5i5H24rTFCSUIFNZa47Fr7sxoilCQZpG
GnbJlr1gzSH/s360D8URvMvt7/TCW4EakoVTH7r8cdhq1rsXEkuPGp7w7UVF
OrmFXNG94HCujKZ1j4T8Pl8wPN7XC+eWLWovR7ShtJQVPDu1FwoIW2e2aLeh
zg8F8iRaLwxOhHcHrLYi8UDhLW5DvXDRVl4t2b4VNZvMEArGemFFOnKx8HQL
2sEWLX9sthcIc3nxPp2NKOvaBI/Ctj5gS7p1Vi8KIepiEEH2Yh/kxnwtPReX
hjTKjRV/NfVBkKnhe1nfBjDd20ZpbOmDPV/EdhT3NYCTn5pvbFsfZNi9eSxz
vBGi1SRrtDr7IKLkvfXYt0b4Tvh9Ia6vD+ruX3riaNYMkW2vzC6N9wE914M4
d6oNmIN1AalsFKDoi3cOU7vgr+pJqQccFJhkeJz3UuiGLfFZzZdxFDjvUb80
FNoNSpZveZe5KeDwN8WGR7QHQsdvRl3lpwCZUXSFs70H5H8sZq2JUeBw+7Hs
YEkyPFqT67muSoFwlTl8SmUfRDKFTkudpUBfiZ/s8iiWdwNnwu9zFNChk/wO
81Cg68XAvRfqFJj4Qh/YdJ0C4rufcVddokBdBbmo6DcFGuXp5/aZUuD1J64z
uiI06N/Rkv79BgW+x7NwBKDBzz+FfGXmFLDaxbzMbkeD3VWhg1csKYBD+J7J
XBo4aCt6B9hToLOS5HFUpR/4rF5+ZnlSwO/RCbvNlwZAXMNrZyF2TqeYCDIX
HAfg5EEr/0e+FOAw89LPfDkAFj9OXtr9kAKnu6LP67YPQIHvKEs7iAL5FY06
YZcGwTBCWTQ3ggK3U2/6mKgMgYOnZJDPOwrM9NXmbzcZgofXt33XiKIA/k1h
bID7EKSJscroMRSovP4mKzhnCBay3xpuS6LAQv2NfSu76RBbP/nSLZ8CB+cL
ZTlH6RC6+HXr7QIKnKndXExapoOn7Ldw0yIKBKbUdKvuHAb96OloKKWA6L3j
QyNaw8B293fK1losv45ddzXThuFnwqw0O4ECv7XPDfZWDsNg71zWnzoKTIWc
Yy30DEPx2b/5Q00UUGaIlcyvDIP9juXK7E4KzNrueZOrNwKGF1bOxndT4OXC
5L4qyxHA+68SwkkUoJIceU3cR2DvxHqzD4UCoQ51jTLRI8AlzKZzj4bVFxjl
ZYXdJ+cus3daDFDgZKSwzr7yEego5+zVGqZAWkOe8NH+Eaj4iTNRYVDgYfC1
OZ+vI5BxgGtAdpQCb+0H0rQXRuBJ2GaG4AQF7lQLX7gnwACnOh4b7q8UEJn7
y12znwGmC1smlqcowFs5p/NaFrv/Wm2dHv2B6Tk0MJOmyYD9UducKTMU2PTL
XPj7FQbwEflnWzFfzc7J3cw2Y8DS+nbP6jkKeKb+iB61Y8CEosDilz8UIH0T
z4twZgDZQdAvdQHT8xo8LPdhQG38zrXoJQqkBmVOGj1lQAz3Hs7HqxTwF3Dg
+P6WAc/UhELc1jF9bwjcZ0YzwN1tL89tNipwHcpmacczwCJDOMyUgwraj0Q0
9qcyQHdIhF8PR4ViZbz17SwGKG8XiwQuKqQEUnbv/cwAKa19uxQ3UyH2wtMz
KoUM2OG3P+bgFipMZrQnN5YwYD1fXESYjwrb3A5LVJYxYHpcImHrNiqoR/54
JVTJgH4hSQn27VT4/OpayUgVAxr1pdL+7KDCs0nfe7w1DCgMlD40JUgFjSzr
gHiME8oO5gztosL95tnGdxi//HFIrnsPFVxif3P+rGaAj4RMQf1eKtwx5ubN
wuLZmRxRLBWhQoYHIb2hggFXXx0tzRajwrFjoQnnsHzOEmRV4vdTYd9SRu0e
LN8jf+WqwyWoMDas06VfwIDdRxQgWJIKVnyP3jNyGcBpeazeR5oKX1UO0toz
GPD73XGte4ew/ES2mu9IZgC99USrhQwVLKmU8fxYBrStKepeO0qFf57sSqnv
GNCqN2wvJUeF/XDG0TsM408hgQvymN6GJNmSYIy/KyS0HqNCE+z3M3+IscpA
RewJKpw7l6B7zwPj54EUJyUq6HZ/ix1zxJh2dPbcKSoIm9RaESwx9np8eFyF
CiNjUfK5lzBuPKT5nyoVkiKLJEvPYixIsgw9S4Ur9S8dJY9jXCj54eh5Khwl
LZaJ78aYrbNoTZ0K/UXxGfncGF/x7urWpMK9K+JFsUsj0PqzdZPnRSoMgeTY
c2w+WtXcJS7oUMH+cuLE8xaMX4mcFdKjwqf6mYax/zCWcfasvkKFrfcUmxLD
MfbdE/7GgApLdzgIbI8wbiHkWhlSoST8ulaZA8a3Bcdx16lw/dPdKPFzGJdU
r1NNqcCf1HuMdAhjTnvhbDMsfx2hJfJ2jJPLDfQtsHoXPiU3MYehZfgWIeo2
5h/R9wYXfYehWZabfucOFazHTmjY3sTYv2BRxZEKm24O+jQDxns5FUacqDD1
/KmUNQ5j46z4g55UqGky/tISTIfmNIOKJS8qVBR0juNsMZ5f7iP6YH6923s6
AI9xhD6fiz8VztgqfTrxbwiaO+f8ygIxf1V1pF63xlg0LvpFMBW+PC5UuI/t
v833tIrMQ6jge17xYfl2jHlivm28oELI47qo6epBaNY6a3oxApsnPh79FN5B
aKoJPTmQSIVsdr1a9YB+kGp6FTKaTIUdD6Oav2r1Q2DHW9q3VCr8ihm96cvT
D+eGPjxYzqSC5AkOvPFrGpQuZdaIFFDh0jPf8Y5QKuxky9smVUSF+XxHx3gN
KrhzF1jKllAh+uguF11sX5DfXc5+tpwKcb/jKMquFMhQbNWyIFDBzLqj5uCF
PsCpdkTb12P9b3m3XLDUCzbqPV+dG6nQx6GqvSWnF/YZ9L940kqFysw/lQd4
euGD81RnUg/Wry0lVmXlJHievdlknEkFP5Awji3rhMkCvszpMSrYcRrdIv/p
AM3y7UvzLCrcuDbt6qTQAWwtQrG4b1TAxvpCWRwRHrAOj0jPUiG5z6PnzPUW
uLv/kr0DOw0MyH2/Qi8SoPWgfpkrJw2i1EOWd5bUwkF5g80PNtFAfJCeZkmq
hjG1GzkveGigEFN1IH25HMzMHGdydtDgcIVxPi93IZRb34diQRqk2zRVFSx8
ht2ObuFVu2hApp3pMujNBrLPgxMde2lQn0Q1d3BIhmNPHgX1Yf/7AWn/KnzP
x8KbkIA+uhgN6IWsMzkfI+DH62fSE/tpILlXaSWkKAB0o154/5SgQXKT7IUz
xsnn/gcn1YJm
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"Residual\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->NCache[{{0, 
      Rational[30, 83]}, {-1.889537107809747, 2.5637384017807126`}}, {{
     0, 0.3614457831325301}, {-1.889537107809747, 2.5637384017807126`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.594056707170975*^9, 3.594135214905895*^9, 3.5941352913860025`*^9, 
   3.594135389206139*^9, 3.5941358497067842`*^9, 3.594135906266863*^9, 
   3.5941360273770328`*^9, 3.5941360777071033`*^9, 3.594136419707582*^9, 
   3.5941364929076843`*^9, 3.5941365766078014`*^9, 3.594136662007921*^9, 
   3.594136716887998*^9, {3.594136781168088*^9, 3.5941368258681507`*^9}, 
   3.5941368656082063`*^9, 3.5941369063782635`*^9, 3.594140697040877*^9, 
   3.594140787741004*^9, 3.594140832831067*^9, 3.594382524459326*^9, 
   3.594384776779993*^9, 3.5943848465800915`*^9, 3.5943850134703245`*^9, 
   3.5943902842580476`*^9, 3.594390417999054*^9, 3.594391325735265*^9, 
   3.594393746434065*^9, 3.594393858094221*^9, 3.5943940766695347`*^9, 
   3.594394160529652*^9, 3.5943972381689034`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]], 
    LineBox[{{-3.9192832529827184`, -1.5032743521219816`}, \
{-3.918269294001628, -1.4977670880880867`}, {-3.8913295978513722`, \
-1.3488745013451275`}, {-3.8374502055508612`, -1.0418935620372354`}, \
{-3.7296914209498397`, -0.40119286503997476`}, {-3.7223887349847216`, \
-0.3569721158511765}, {-3.715086049019603, -0.31269893042110564`}, \
{-3.7004806770893657`, -0.22403281476347825`}, {-3.671269933228892, \
-0.046490912015838326`}, {-3.612848445507944, 
     0.30718766088333815`}, {-3.6055457595428253`, 
     0.3510631899443615}, {-3.598243073577707, 
     0.3948287584853176}, {-3.5836377016474703`, 
     0.48198624173988946`}, {-3.5544269577869962`, 
     0.6544962753648909}, {-3.511305186012229, 0.9019632484109316}}], 
    LineBox[CompressedData["
1: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
+KfziPGNSFZc5LOxCQMmymqeCPqm9P8HZXFgQQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"Residual\"", TraditionalForm]},
  AxesOrigin->{-23.025850929940457`, -1.5032743521219816`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  FrameTicks->{{Automatic, Automatic}, {{{-23.025850929940457`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-4.605170185988091, 
       FormBox["0.01`", TraditionalForm]}, {0., 
       FormBox["1", TraditionalForm]}, {-20.540944280152456`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.890356714011308`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.499490405324295`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.219188440170136`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.000499239205308`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.821158310549492`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.669142103250866`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.537214560208316`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-23.025850929940457`, 
       FormBox["\"\"", TraditionalForm]}, {-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-13.815510557964274`, 
       FormBox["\"\"", TraditionalForm]}, {-9.210340371976182, 
       FormBox["\"\"", TraditionalForm]}, {-4.605170185988091, 
       FormBox["\"\"", TraditionalForm]}, {0., 
       FormBox["\"\"", TraditionalForm]}, {-20.540944280152456`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.890356714011308`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.499490405324295`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.219188440170136`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-19.000499239205308`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.821158310549492`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.669142103250866`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-18.537214560208316`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.935774094164366`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.285186528023216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.894320219336205`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.614018254182046`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.395329053217216`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.215988124561399`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.063971917262773`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.932044374220226`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.330603908176274`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.680016342035124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.289150033348113`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.008848068193954`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.790158867229126, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.610817938573309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.458801731274683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.326874188232134, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.725433722188183, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-6.074846156047033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.683979847360021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.403677882205863, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.184988681241033, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-5.005647752585217, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.853631545286591, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-4.721704002244043, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-2.120263536200091, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.4696759700589417`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-1.07880966137193, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.7985076962177716, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.579818495252942, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.40047756659712525`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.2484613592984996, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-0.11653381625595151`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  Method->{},
  PlotRange->NCache[{{-23.025850929940457`, -Log[
        Rational[83, 30]]}, {-1.5032743521219816`, 
     0.9019632484109316}}, {{-23.025850929940457`, -1.0176432261344426`}, \
{-1.5032743521219816`, 0.9019632484109316}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{-23.025850929940457`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-9.210340371976182, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-4.605170185988091, 
      FormBox["0.01`", TraditionalForm]}, {0., 
      FormBox["1", TraditionalForm]}, {-20.540944280152456`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.890356714011308`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.499490405324295`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.219188440170136`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-19.000499239205308`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.821158310549492`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.669142103250866`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-18.537214560208316`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.935774094164366`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.285186528023216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.894320219336205`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.614018254182046`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.395329053217216`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.215988124561399`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.063971917262773`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.932044374220226`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.330603908176274`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.680016342035124`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.289150033348113`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.008848068193954`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.790158867229126, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.610817938573309, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.458801731274683, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.326874188232134, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.725433722188183, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-6.074846156047033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.683979847360021, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.403677882205863, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.184988681241033, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-5.005647752585217, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.853631545286591, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-4.721704002244043, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-2.120263536200091, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.4696759700589417`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-1.07880966137193, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.7985076962177716, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.579818495252942, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.40047756659712525`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.2484613592984996, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-0.11653381625595151`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.594056707170975*^9, 3.594135214905895*^9, 3.5941352913860025`*^9, 
   3.594135389206139*^9, 3.5941358497067842`*^9, 3.594135906266863*^9, 
   3.5941360273770328`*^9, 3.5941360777071033`*^9, 3.594136419707582*^9, 
   3.5941364929076843`*^9, 3.5941365766078014`*^9, 3.594136662007921*^9, 
   3.594136716887998*^9, {3.594136781168088*^9, 3.5941368258681507`*^9}, 
   3.5941368656082063`*^9, 3.5941369063782635`*^9, 3.594140697040877*^9, 
   3.594140787741004*^9, 3.594140832831067*^9, 3.594382524459326*^9, 
   3.594384776779993*^9, 3.5943848465800915`*^9, 3.5943850134703245`*^9, 
   3.5943902842580476`*^9, 3.594390417999054*^9, 3.594391325735265*^9, 
   3.594393746434065*^9, 3.594393858094221*^9, 3.5943940766695347`*^9, 
   3.594394160529652*^9, 3.5943972382625036`*^9}]
}, Open  ]],

Cell["\<\
And calculate the residuals explcitly as a function of basis order:\
\>", "Text",
 CellChangeTimes->{{3.5940565506871004`*^9, 3.594056613820411*^9}, {
  3.594385141690504*^9, 3.5943851546405225`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"residual", "[", "i_", "]"}], ":=", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"y", "[", 
          RowBox[{"i", ",", "1"}], "]"}], "-", 
         RowBox[{"psi", "[", 
          RowBox[{"1", ",", "0"}], "]"}]}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "R"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"residual", "[", "order", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"y", ",", "i", ",", "j", ",", " ", "order"}], "]"}], ";"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.5940567177633944`*^9, 3.5940567484330473`*^9}, {
   3.5941351760158405`*^9, 3.5941351931758647`*^9}, {3.594135249725944*^9, 
   3.5941352524759483`*^9}, {3.594135357576095*^9, 3.5941353615861006`*^9}, {
   3.5941354534662294`*^9, 3.5941354696062517`*^9}, {3.5941355000262947`*^9, 
   3.594135567496389*^9}, {3.594135599116433*^9, 3.5941356349964833`*^9}, 
   3.594135717696599*^9, {3.5941357656966667`*^9, 3.5941358099167285`*^9}, {
   3.594135983986972*^9, 3.5941360008769956`*^9}, {3.594136092637124*^9, 
   3.594136202547278*^9}, {3.5941362422573338`*^9, 3.5941363260674505`*^9}, {
   3.5941364321175995`*^9, 3.594136444637617*^9}, {3.594136497597691*^9, 
   3.5941364982576923`*^9}, {3.594136543827756*^9, 3.5941365685177903`*^9}, {
   3.5941408571611013`*^9, 3.5941408600411053`*^9}, {3.594382672089535*^9, 
   3.5943827616696606`*^9}, {3.5943828665598073`*^9, 3.594382964259944*^9}, {
   3.5943830149600153`*^9, 3.594383050710065*^9}, {3.5943832039102793`*^9, 
   3.594383245710338*^9}, {3.594383278320384*^9, 3.5943832803103867`*^9}, {
   3.5943833381404676`*^9, 3.5943833677705092`*^9}, {3.5943835440882673`*^9, 
   3.5943837125085034`*^9}, {3.594383807148636*^9, 3.5943838271586637`*^9}, 
   3.594383892098755*^9, {3.5943839708888655`*^9, 3.5943839824788814`*^9}, {
   3.5943840439289675`*^9, 3.594384121329076*^9}, {3.5943843045993323`*^9, 
   3.5943843124993434`*^9}, {3.5943843540694017`*^9, 3.594384372059427*^9}, 
   3.5943844600195503`*^9, {3.594384527949645*^9, 3.5943845427596655`*^9}, {
   3.5943845990397444`*^9, 3.594384600889747*^9}, {3.594384634539794*^9, 
   3.5943846346797943`*^9}, {3.5943846726598473`*^9, 3.594384672949848*^9}, {
   3.594385020810335*^9, 3.594385047470372*^9}, {3.5943903234181023`*^9, 
   3.5943903460681343`*^9}, {3.5943904369490805`*^9, 
   3.5943904414190865`*^9}, {3.594390547779236*^9, 3.5943905483892365`*^9}, {
   3.594390584969288*^9, 3.594390585269288*^9}, 3.59439062243934*^9, {
   3.594390676852125*^9, 3.5943907127477884`*^9}, {3.5943908038207483`*^9, 
   3.5943908384684095`*^9}, {3.594390876423276*^9, 3.59439087885688*^9}, {
   3.594390939743787*^9, 3.594390972113844*^9}, 3.5943913574189205`*^9}],

Cell[BoxData["0.6563676287049617`"], "Output",
 CellChangeTimes->{{3.594056729900215*^9, 3.5940567499930506`*^9}, 
   3.5941352150358953`*^9, 3.5941352561059527`*^9, 3.594135295416008*^9, 
   3.5941353627661023`*^9, 3.5941353944161463`*^9, 3.594135788806699*^9, 
   3.5941358768268223`*^9, 3.594135908836867*^9, 3.594136003847*^9, 
   3.5941360371370463`*^9, {3.5941360807171073`*^9, 3.594136123517167*^9}, {
   3.5941361643672247`*^9, 3.5941362095672874`*^9}, {3.594136314567435*^9, 
   3.59413633981747*^9}, 3.5941364456176186`*^9, 3.5941365036476994`*^9, 
   3.5941365448877573`*^9, 3.5941365797778063`*^9, 3.594140708640893*^9, 
   3.594140754680958*^9, 3.594140790791008*^9, {3.594140836371072*^9, 
   3.594140861951108*^9}, 3.5943825397893476`*^9, 3.594382699259573*^9, {
   3.5943827357296243`*^9, 3.594382762599662*^9}, {3.5943829565499334`*^9, 
   3.5943829652399454`*^9}, {3.594383026360031*^9, 3.5943830514600663`*^9}, 
   3.5943832493103433`*^9, {3.5943833483804817`*^9, 3.594383371850515*^9}, 
   3.5943834295505953`*^9, {3.5943835494882755`*^9, 3.5943836236883793`*^9}, {
   3.5943836579984274`*^9, 3.594383713638505*^9}, {3.594383815178647*^9, 
   3.5943838287286663`*^9}, {3.59438386727872*^9, 3.594383892638756*^9}, {
   3.5943839668088593`*^9, 3.5943839720688667`*^9}, 3.594384010658921*^9, 
   3.5943843285793657`*^9, 3.5943843791194367`*^9, 3.594384549419675*^9, 
   3.594384611649762*^9, 3.594384648249813*^9, 3.59438469609988*^9, 
   3.5943850488703747`*^9, 3.5943902885880537`*^9, {3.594390324988105*^9, 
   3.5943903334181166`*^9}, 3.5943904441890907`*^9, 3.5943905490992374`*^9, 
   3.594390585909289*^9, 3.5943906239293423`*^9, {3.594390680580532*^9, 
   3.594390714900592*^9}, {3.5943908112619615`*^9, 3.5943908431328173`*^9}, 
   3.594390936264981*^9, 3.594391064388006*^9, {3.594391345313299*^9, 
   3.594391358495322*^9}, 3.5943937581540813`*^9, 3.5943938611542253`*^9, 
   3.594394079819539*^9, 3.594394164229657*^9, 3.5943965471593924`*^9, {
   3.5943972334108953`*^9, 3.5943972411797085`*^9}}]
}, Open  ]],

Cell["\<\
We can also generate a plot of the residuals as a function of basis order \
sequentially to track the improvement of accuracy of the Galerkin method (NB. \
for high orders, this calculation can get quite lengthy since every order is \
calculated):\
\>", "Text",
 CellChangeTimes->{{3.5940565506871004`*^9, 3.594056613820411*^9}, {
  3.5943841723891473`*^9, 3.594384280749299*^9}, {3.594384583099722*^9, 
  3.594384589539731*^9}, {3.594385337005801*^9, 3.594385394785882*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"order", " ", "=", "25"}], ";", " ", 
   RowBox[{"j", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{"j", "\[LessEqual]", "order"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"galerkinSE", "[", 
        RowBox[{"j", ",", "0", ",", "R", ",", "Z", ",", "l"}], "]"}], ";", 
       RowBox[{"residual", "[", "j", "]"}], ";", " ", 
       RowBox[{"j", "++"}]}], ")"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"residuals", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"residual", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "order"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"residual", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "order"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "0.02", "]"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "0.1"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<order\>\"", ",", "\"\<Residual\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.5943840511889777`*^9, 3.5943841517891183`*^9}, 
   3.594384323569359*^9, {3.5943850679104013`*^9, 3.5943850685504017`*^9}, {
   3.5943862187189035`*^9, 3.5943862744914813`*^9}, {3.5943877171202326`*^9, 
   3.5943877805967445`*^9}, {3.5943879675474725`*^9, 
   3.5943879727266817`*^9}, {3.594388063289827*^9, 3.5943880841798563`*^9}, {
   3.594396542463784*^9, 3.5943965433061857`*^9}, {3.5943965772830453`*^9, 
   3.594396622101924*^9}, {3.5943967237049026`*^9, 3.5943967243913035`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.594396992063074*^9, 3.594397521445053*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(400\\)\[NoBreak] times. The global error \
is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(3.43908929112402`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.684791870262803`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.594396992063074*^9, 3.594397521525053*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Numerical integration converging too slowly; suspect one \
of the following: singularity, value of the integration is 0, highly \
oscillatory integrand, or WorkingPrecision too small. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/slwcon\\\", ButtonNote -> \
\\\"NIntegrate::slwcon\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.594396992063074*^9, 3.5943975223450546`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The global error of the strategy GlobalAdaptive has \
increased more than \[NoBreak]\\!\\(400\\)\[NoBreak] times. The global error \
is expected to decrease monotonically after a number of integrand \
evaluations. Suspect one of the following: the working precision is \
insufficient for the specified precision goal; the integrand is highly \
oscillatory or it is not a (piecewise) smooth function; or the true value of \
the integral is 0. Increasing the value of the GlobalAdaptive option \
MaxErrorIncreases might lead to a convergent numerical integration. \
NIntegrate obtained \[NoBreak]\\!\\(3.43908929112402`*^-16\\)\[NoBreak] and \
\[NoBreak]\\!\\(2.684791870262803`*^-16\\)\[NoBreak] for the integral and \
error estimates. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NIntegrate/eincr\\\", ButtonNote -> \
\\\"NIntegrate::eincr\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.594396992063074*^9, 3.5943975223450546`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Greater", "::", "nord"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Invalid comparison with \[NoBreak]\\!\\(\\(\\(0.` \
\[VeryThinSpace]\\)\\) + \\(\\(29529.050870998948`\\\\ \[ImaginaryI]\\)\\)\\)\
\[NoBreak] attempted. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/nord\\\", ButtonNote -> \
\\\"Greater::nord\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.594396992063074*^9, 3.5943978431421566`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Greater", "::", "nord"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Invalid comparison with \[NoBreak]\\!\\(\\(\\(0.` \
\[VeryThinSpace]\\)\\) - \\(\\(1584.1943214857797`\\\\ \[ImaginaryI]\\)\\)\\)\
\[NoBreak] attempted. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/nord\\\", ButtonNote -> \
\\\"Greater::nord\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.594396992063074*^9, 3.594397843182157*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Greater", "::", "nord"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Invalid comparison with \[NoBreak]\\!\\(\\(\\(0.` \
\[VeryThinSpace]\\)\\) + \\(\\(1466.1053394402757`\\\\ \[ImaginaryI]\\)\\)\\)\
\[NoBreak] attempted. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/nord\\\", ButtonNote -> \
\\\"Greater::nord\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.594396992063074*^9, 3.59439795972232*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Greater \
:: nord\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.594396992063074*^9, 3.59439795974232*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.3266499161419971`", ",", "1.2053984149122892`", ",", 
   "1.0422142698074266`", ",", "0.8526515955975`", ",", "0.6563676287049617`",
    ",", "0.4726512097907825`", ",", "0.31711335807997687`", ",", 
   "0.1987861544478887`", ",", "0.11793877841991697`", ",", 
   "0.06706671099158895`", ",", "0.03641771150255762`", ",", 
   "0.018643072890177886`", ",", "0.008944822145016821`", ",", 
   "0.0040304837699685625`", ",", "0.0017134242257368338`", ",", 
   "0.0007033926712849615`", ",", "0.0002643219961771543`", ",", 
   "0.0000964609987016194`", ",", "0.0000336002379892561`", ",", 
   "0.00001119575296565387`", ",", "3.636282354828797`*^-6", ",", 
   "1.1906843982652664`*^-6", ",", 
   RowBox[{"3.071760268138883`*^-6", "-", 
    RowBox[{"3.407668593971814`", " ", "\[ImaginaryI]"}]}], ",", 
   "9.655328364568868`*^-6", ",", "1.7201760664317309`*^-6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.5943980914224386`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[0.02], {
     {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[0.02], Opacity[
      0.2], LineBox[{},
       VertexColors->None]}, 
     {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[0.02], Opacity[
      0.2], LineBox[CompressedData["
1:eJxVyjtIwgEQx3GtpaEhQkixwEREtEJ7kSH/O3oqDZFEEulitEXp0BISIgTh
EhUZBSFEBYkgaYsQGdQSSBRGUIk0VEYuihgIQQ/yhvvBDR++1+yct85Ui0Qi
6e9VVe5/eXhTGvpLxhKQd7b/Fk9UHlDVqnsYtRSBzHsNzpYuMu/hPJB5r8Nz
deI7Z84BmXcJxuRzkU/RK5B5l2L5vin9ARkg896Ij+Ll1ObIHZB5V6BOq1Ck
3FdA5l2JkzOC3WQ4AzLvKkwWpqJm3TGQeVfjljwZtB3sAZl3Da5kXW5dwwaQ
edfiavjw5GjMB2TeWxAtocSAzwVk3tuwEHnGYL0dyLzrMa739Hlqh4HMuwEV
kqHxgNUAZN7b0S9LTkxbZEDmvQP3v3LOxK4YyLx34oJXsx5ezApk3rvQcbnm
ePJeC2Teu7F3adBWLMcEMu89eBO8NYbgRSDzbkR/1BSQpU8FMvUfVQ3tJw==

       "],
       VertexColors->None]}}}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], PointSize[0.02], {}, 
    PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQEf7J8pGTp/tfxqDxVwUNHVvunv+RnK53DI+Xr4
3os1H6B8AYcDavv/v/Z4DeWLOGyWzlv/jeEplC/h8POa7J1X9vegfBmHW4yt
l6d6X4HyFRy0tRQULheehPKVHCJT7WJsDPdB+SoOZz5Gb/LQ3gjlqzlMlz4z
P3zpIihfw6HjeUGhtvhkKF/LoX/Nsi0rA5ugfB0HB89V+12aCqB8PYeP6x84
zBeKgfINHHYa1DjV8LhD+YYOCiJuIdOCDKF8I4cuyTNhyZ6SUL6xw5I/r5P2
z2WE8k0cShs0Jq2pem4H4Zs6xB6ZGHu74RyUb+ZgVeca/vnnZijfwuHC/IuW
q+yfQPmWDl2bbKZJ3tljBwCGr2lf
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"order\"", TraditionalForm], 
    FormBox["\"Residual\"", TraditionalForm]},
  AxesOrigin->{0, -0.1},
  Method->{"MessagesHead" -> DiscretePlot},
  PlotRange->{{0, 20}, {-0.1, 2}},
  PlotRangePadding->{{Automatic, Automatic}, {
    Automatic, Automatic}}]], "Output",
 CellChangeTimes->{3.59439809240524*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "y", ",", "i", ",", "j", ",", " ", "order", ",", "Z", ",", " ", "R", ",", 
    " ", "l", ",", "galerkinSE"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.5943837603085704`*^9, 3.594383786358607*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.5941369787083645`*^9, 3.5941369814983683`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Johnson, W. R., ",
 StyleBox["Atomic Structure Theory",
  FontSlant->"Italic"],
 ", Springer-Verlag, Berlin, 2007"
}], "Item",
 CellChangeTimes->{{3.5941370103084087`*^9, 3.5941370428084545`*^9}, {
  3.5941370748984995`*^9, 3.5941370748984995`*^9}, {3.5941371366885853`*^9, 
  3.5941371978686714`*^9}}],

Cell[TextData[{
 "Fletcher, C. A. J.,",
 StyleBox[" Computational Galerkin Methods",
  FontSlant->"Italic"],
 ", Springer-Verlag, Berlin, 1984"
}], "Item",
 CellChangeTimes->{{3.5941370103084087`*^9, 3.5941370428084545`*^9}, {
  3.5941370748984995`*^9, 3.5941371201585627`*^9}, {3.5941372270287123`*^9, 
  3.5941372579087553`*^9}}],

Cell[TextData[{
 "Bhatti, M. and Perger, W., J. Phys. B: At. Mol. Opt. Phys. ",
 StyleBox["39",
  FontWeight->"Bold"],
 " 553 (2006)"
}], "Item",
 CellChangeTimes->{{3.5941370103084087`*^9, 3.5941370428084545`*^9}, {
  3.5941370748984995`*^9, 3.5941371201585627`*^9}, {3.5941372270287123`*^9, 
  3.5941373003688145`*^9}, {3.5941373969315014`*^9, 3.594137408951518*^9}}],

Cell[TextData[{
 "Johnson, W. R, Blundell, S. A., Sapirstein, J., Phys. Rev. A,",
 StyleBox[" 37",
  FontWeight->"Bold"],
 " 307 (1988)"
}], "Item",
 CellChangeTimes->{{3.5941370103084087`*^9, 3.5941370428084545`*^9}, {
  3.5941370748984995`*^9, 3.5941371201585627`*^9}, {3.5941372270287123`*^9, 
  3.5941373003688145`*^9}, {3.5941373969315014`*^9, 3.5941374897816315`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1431, 894},
WindowMargins->{{3, Automatic}, {-4, Automatic}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
ShowSelection->True,
FrontEndVersion->"9.0 for Microsoft Windows (64-bit) (November 20, 2012)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3594113611-7772521"->{
  Cell[57512, 1189, 621, 14, 53, "Print",
   CellTags->"Info3594113611-7772521"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3594113611-7772521", 261651, 5154}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 319, 7, 142, "Title"],
Cell[901, 31, 100, 1, 41, "Author"],
Cell[1004, 34, 163, 3, 18, "Department"],
Cell[1170, 39, 100, 1, 44, "Date"],
Cell[CellGroupData[{
Cell[1295, 44, 99, 1, 81, "Section"],
Cell[1397, 47, 2080, 30, 144, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3514, 82, 128, 1, 81, "Section"],
Cell[3645, 85, 368, 9, 30, "Text"],
Cell[4016, 96, 913, 27, 54, "DisplayFormulaNumbered"],
Cell[4932, 125, 247, 8, 30, "Text"],
Cell[5182, 135, 601, 16, 50, "DisplayFormulaNumbered"],
Cell[5786, 153, 1929, 56, 85, "Text"],
Cell[7718, 211, 934, 26, 51, "DisplayFormulaNumbered"],
Cell[8655, 239, 230, 5, 30, "Text"],
Cell[8888, 246, 589, 15, 42, "DisplayFormulaNumbered"],
Cell[9480, 263, 249, 5, 30, "Text"],
Cell[9732, 270, 592, 15, 51, "DisplayFormulaNumbered"],
Cell[10327, 287, 733, 19, 30, "Text"],
Cell[11063, 308, 1532, 44, 67, "DisplayFormulaNumbered"],
Cell[12598, 354, 129, 3, 30, "Text"],
Cell[12730, 359, 3628, 116, 256, "DisplayFormulaNumbered"],
Cell[16361, 477, 221, 6, 49, "Text"],
Cell[16585, 485, 38610, 638, 785, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55232, 1128, 213, 4, 81, "Section"],
Cell[55448, 1134, 918, 17, 51, "Text"],
Cell[56369, 1153, 826, 23, 60, "Input"],
Cell[57198, 1178, 167, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[57390, 1185, 119, 2, 40, "Input"],
Cell[57512, 1189, 621, 14, 53, "Print",
 CellTags->"Info3594113611-7772521"]
}, Open  ]],
Cell[58148, 1206, 810, 16, 51, "Text"],
Cell[CellGroupData[{
Cell[58983, 1226, 664, 16, 40, "Input"],
Cell[59650, 1244, 58946, 981, 257, "Output"]
}, Open  ]],
Cell[118611, 2228, 16, 0, 30, "Text"],
Cell[118630, 2230, 211, 4, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118878, 2239, 221, 4, 81, "Section"],
Cell[119102, 2245, 1762, 31, 125, "Text"],
Cell[120867, 2278, 1651, 45, 91, "DisplayFormulaNumbered"],
Cell[122521, 2325, 211, 4, 30, "Text"],
Cell[122735, 2331, 716, 17, 89, "DisplayFormulaNumbered"],
Cell[123454, 2350, 977, 24, 49, "Text"],
Cell[124434, 2376, 847, 21, 99, "DisplayFormulaNumbered"],
Cell[125284, 2399, 134, 3, 30, "Text"],
Cell[125421, 2404, 2425, 67, 102, "DisplayFormulaNumbered"],
Cell[127849, 2473, 177, 4, 30, "Text"],
Cell[128029, 2479, 797, 18, 71, "DisplayFormulaNumbered"],
Cell[128829, 2499, 134, 3, 30, "Text"],
Cell[128966, 2504, 2375, 62, 99, "DisplayFormulaNumbered"],
Cell[131344, 2568, 552, 18, 30, "Text"],
Cell[131899, 2588, 1834, 47, 92, "DisplayFormulaNumbered"],
Cell[133736, 2637, 1226, 27, 89, "DisplayFormulaNumbered"],
Cell[134965, 2666, 138, 3, 30, "Text"],
Cell[135106, 2671, 1259, 28, 65, "DisplayFormulaNumbered"],
Cell[136368, 2701, 757, 19, 51, "Text"],
Cell[137128, 2722, 1015, 24, 101, "DisplayFormulaNumbered"],
Cell[138146, 2748, 229, 7, 30, "Text"],
Cell[138378, 2757, 15056, 347, 738, "Input"],
Cell[153437, 3106, 348, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[153810, 3116, 3096, 47, 61, "Input"],
Cell[156909, 3165, 3735, 64, 241, "Output"]
}, Open  ]],
Cell[160659, 3232, 131, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[160815, 3237, 796, 23, 40, "Input"],
Cell[161614, 3262, 27574, 457, 266, "Output"]
}, Open  ]],
Cell[189203, 3722, 402, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[189630, 3733, 4040, 131, 297, "Input"],
Cell[193673, 3866, 18458, 311, 250, "Output"],
Cell[212134, 4179, 30777, 554, 260, "Output"]
}, Open  ]],
Cell[242926, 4736, 210, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[243161, 4744, 2917, 52, 83, "Input"],
Cell[246081, 4798, 2026, 27, 40, "Output"]
}, Open  ]],
Cell[248122, 4828, 485, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[248632, 4840, 2070, 54, 161, "Input"],
Cell[250705, 4896, 600, 11, 21, "Message"],
Cell[251308, 4909, 1148, 19, 73, "Message"],
Cell[252459, 4930, 602, 11, 21, "Message"],
Cell[253064, 4943, 1150, 19, 73, "Message"],
Cell[254217, 4964, 556, 11, 21, "Message"],
Cell[254776, 4977, 554, 11, 21, "Message"],
Cell[255333, 4990, 553, 11, 21, "Message"],
Cell[255889, 5003, 551, 11, 21, "Message"],
Cell[256443, 5016, 969, 18, 64, "Output"],
Cell[257415, 5036, 1794, 39, 251, "Output"]
}, Open  ]],
Cell[259224, 5078, 265, 6, 40, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259526, 5089, 99, 1, 81, "Section"],
Cell[CellGroupData[{
Cell[259650, 5094, 320, 8, 25, "Item"],
Cell[259973, 5104, 331, 8, 25, "Item"],
Cell[260307, 5114, 369, 8, 25, "Item"],
Cell[260679, 5124, 374, 8, 25, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
